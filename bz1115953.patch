commit a875d38a73d22497df2a61878b0a76da26b1b27f
Author: Nathan Scott <nathans@redhat.com>
Date:   Fri May 16 19:17:38 2014 +1000

    Resolve regression recently introduced in QmcDesc test case

diff --git a/qa/qt/qmc_desc/qmc_desc.cpp b/qa/qt/qmc_desc/qmc_desc.cpp
index 896f67e..fcce0b4 100644
--- a/qa/qt/qmc_desc/qmc_desc.cpp
+++ b/qa/qt/qmc_desc/qmc_desc.cpp
@@ -93,8 +93,9 @@ main(int argc, char* argv[])
 	pmprintf("%s: Error: Bogus metric: %s\n",
 		 pmProgname, pmErrStr(bad_pmc.status()));
 	pmflush();
-	sts = 1;
     }
+    else
+	sts = 1;
 
     return sts;
 }
commit 81785d8808739c0108a4162b36c9945e428a4046
Author: Nathan Scott <nathans@redhat.com>
Date:   Tue May 20 13:45:34 2014 +1000

    Add X server access notrun checks to each of the pmchart tests

diff --git a/qa/1001 b/qa/1001
index b862c6b..5abeffd 100755
--- a/qa/1001
+++ b/qa/1001
@@ -6,6 +6,7 @@ seq=`basename $0`
 echo "QA output created by $seq"
 . ./common.test
 
+_check_display
 rm -rf \$tmp.*
 status=0	# success is the default!
 trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15
diff --git a/qa/1002 b/qa/1002
index 9d04405..74119a7 100755
--- a/qa/1002
+++ b/qa/1002
@@ -6,6 +6,7 @@ seq=`basename $0`
 echo "QA output created by $seq"
 . ./common.test
 
+_check_display
 status=0	# success is the default!
 trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15
 
diff --git a/qa/1003 b/qa/1003
index af3b608..7174d51 100755
--- a/qa/1003
+++ b/qa/1003
@@ -6,6 +6,7 @@ seq=`basename $0`
 echo "QA output created by $seq"
 . ./common.test
 
+_check_display
 status=0	# success is the default!
 trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15
 
diff --git a/qa/1004 b/qa/1004
index 4de53c4..f6e7d34 100755
--- a/qa/1004
+++ b/qa/1004
@@ -6,6 +6,7 @@ seq=`basename $0`
 echo "QA output created by $seq"
 . ./common.test
 
+_check_display
 status=0	# success is the default!
 trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15
 
diff --git a/qa/1005 b/qa/1005
index ce39897..158ce4a 100755
--- a/qa/1005
+++ b/qa/1005
@@ -8,6 +8,7 @@ seq=`basename $0`
 echo "QA output created by $seq"
 . ./common.test
 
+_check_display
 status=0	# success is the default!
 trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15
 
diff --git a/qa/1006 b/qa/1006
index dfef082..03dc040 100755
--- a/qa/1006
+++ b/qa/1006
@@ -6,6 +6,7 @@ seq=`basename $0`
 echo "QA output created by $seq"
 . ./common.test
 
+_check_display
 status=0	# success is the default!
 trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15
 
diff --git a/qa/1007 b/qa/1007
index 01f012d..7521e04 100755
--- a/qa/1007
+++ b/qa/1007
@@ -6,6 +6,7 @@ seq=`basename $0`
 echo "QA output created by $seq"
 . ./common.test
 
+_check_display
 status=0	# success is the default!
 trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15
 
commit 0dcb2e77cff4319636f2b6de30d2668b5c50c4c2
Author: Nathan Scott <nathans@redhat.com>
Date:   Tue May 20 17:24:15 2014 +1000

    Ensure GUI tests source common.config, else xdpinfo check notruns

diff --git a/qa/common.test b/qa/common.test
index 505ae9a..9ecf986 100644
--- a/qa/common.test
+++ b/qa/common.test
@@ -2,6 +2,7 @@
 . ./common.sh
 . ./common.check
 . ./common.filter
+. ./common.config
 
 tmp=/tmp/$$
 here=`pwd`
commit e2675b311dbeffaaedb4ea08f6b201fdbae0c730
Author: Nathan Scott <nathans@redhat.com>
Date:   Wed Jun 4 14:15:05 2014 +1000

    Update several QA tests from pcp-gui merge
    
    Some of the Qt tests (pcp-gui) were still using locations for
    things like the getpmcdhost script in an absolute path, which
    was due to sharing with pcp-testsuite packages.  Update 'em to
    not rely on an installed testsuite anymore.  Rename the common
    source qt script to something more appropriate now.

diff --git a/qa/1001 b/qa/1001
index 5abeffd..cbff785 100755
--- a/qa/1001
+++ b/qa/1001
@@ -4,7 +4,7 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 _check_display
 rm -rf \$tmp.*
diff --git a/qa/1002 b/qa/1002
index 74119a7..71a6e34 100755
--- a/qa/1002
+++ b/qa/1002
@@ -4,7 +4,7 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 _check_display
 status=0	# success is the default!
diff --git a/qa/1003 b/qa/1003
index 7174d51..6488aa9 100755
--- a/qa/1003
+++ b/qa/1003
@@ -4,7 +4,7 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 _check_display
 status=0	# success is the default!
diff --git a/qa/1004 b/qa/1004
index f6e7d34..7689033 100755
--- a/qa/1004
+++ b/qa/1004
@@ -4,7 +4,7 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 _check_display
 status=0	# success is the default!
diff --git a/qa/1005 b/qa/1005
index 158ce4a..4866ef5 100755
--- a/qa/1005
+++ b/qa/1005
@@ -6,7 +6,7 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 _check_display
 status=0	# success is the default!
diff --git a/qa/1006 b/qa/1006
index 03dc040..9bc1329 100755
--- a/qa/1006
+++ b/qa/1006
@@ -4,7 +4,7 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 _check_display
 status=0	# success is the default!
diff --git a/qa/1007 b/qa/1007
index 7521e04..a7268a9 100755
--- a/qa/1007
+++ b/qa/1007
@@ -4,7 +4,7 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 _check_display
 status=0	# success is the default!
diff --git a/qa/1008 b/qa/1008
index 3012df9..23c85de 100755
--- a/qa/1008
+++ b/qa/1008
@@ -4,7 +4,7 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 status=1	# failure is the default!
 trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15
diff --git a/qa/1009 b/qa/1009
index 6e31c05..cdb5944 100755
--- a/qa/1009
+++ b/qa/1009
@@ -4,7 +4,7 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 status=1	# failure is the default!
 trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15
diff --git a/qa/1010 b/qa/1010
index b82a12b..00f3998 100755
--- a/qa/1010
+++ b/qa/1010
@@ -4,7 +4,7 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 status=1	# failure is the default!
 trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15
diff --git a/qa/1011 b/qa/1011
index 9990602..5a73b67 100755
--- a/qa/1011
+++ b/qa/1011
@@ -4,7 +4,7 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 status=1	# failure is the default!
 trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15
diff --git a/qa/1012 b/qa/1012
index 2beb8ca..a0f9381 100755
--- a/qa/1012
+++ b/qa/1012
@@ -4,7 +4,7 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 status=1	# failure is the default!
 trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15
diff --git a/qa/1013 b/qa/1013
index b6f27f1..641177f 100755
--- a/qa/1013
+++ b/qa/1013
@@ -4,7 +4,7 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 status=1	# failure is the default!
 trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15
diff --git a/qa/1014 b/qa/1014
index 554d869..42e8f7f 100755
--- a/qa/1014
+++ b/qa/1014
@@ -4,7 +4,7 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 qt/qmc_desc/qmc_desc
 exit $?
diff --git a/qa/1015 b/qa/1015
index ce19b5d..db1f80d 100755
--- a/qa/1015
+++ b/qa/1015
@@ -4,7 +4,7 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 qt/qmc_indom/qmc_indom
 exit $?
diff --git a/qa/1016 b/qa/1016
index e8be7d1..9053eac 100755
--- a/qa/1016
+++ b/qa/1016
@@ -4,7 +4,7 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 status=1	# failure is the default!
 trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15
diff --git a/qa/1017 b/qa/1017
index bee7cbb..81b00d8 100755
--- a/qa/1017
+++ b/qa/1017
@@ -4,7 +4,7 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 status=1	# failure is the default!
 trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15
diff --git a/qa/1018 b/qa/1018
index 2871511..ba492e4 100755
--- a/qa/1018
+++ b/qa/1018
@@ -4,7 +4,7 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 status=1	# failure is the default!
 trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15
diff --git a/qa/1019 b/qa/1019
index 4914bba..4052199 100755
--- a/qa/1019
+++ b/qa/1019
@@ -1,19 +1,16 @@
 #!/bin/sh
 # PCP QA Test No. 1019
-# Exercise QmcGroup while illustrating pmjd-like clients and protocols
+# Exercise QmcGroup illustrating simple clients and protocols
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
-
-cd "$PCP_VAR_DIR/testsuite" || \
-	_notrun "Cannot find PCP QA testsuite directory"
+. ./common.qt
 
 _cleanup()
 {
     if [ ! -f $tmp.done ]
     then
-	cd $PCP_VAR_DIR/testsuite/pmdas/dynamic
+	cd $here/pmdas/dynamic
 	$sudo ./Remove >>$here/src/$seq.full
 	cd $here
 	touch $tmp.done
@@ -76,7 +73,7 @@ _filter2()
 }
 
 # real QA test starts here
-cd $PCP_VAR_DIR/testsuite/pmdas/dynamic
+cd $here/pmdas/dynamic
 $sudo make >$here/$seq.full 2>&1
 $sudo ./Install </dev/null >>$here/$seq.full
 cd $here
diff --git a/qa/1020 b/qa/1020
index 706cdb9..75781cd 100755
--- a/qa/1020
+++ b/qa/1020
@@ -4,16 +4,13 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
-
-cd "$PCP_VAR_DIR/testsuite" || \
-	_notrun "Cannot find PCP QA testsuite directory"
+. ./common.qt
 
 _cleanup()
 {
     if [ ! -f $tmp.done ]
     then
-	cd $PCP_VAR_DIR/testsuite/pmdas/dynamic
+	cd $here/pmdas/dynamic
 	$sudo ./Remove >>$here/src/$seq.full
 	cd $here
 	touch $tmp.done
@@ -58,7 +55,7 @@ _filter2()
 }
 
 # real QA test starts here
-cd $PCP_VAR_DIR/testsuite/pmdas/dynamic
+cd $here/pmdas/dynamic
 $sudo make >$here/$seq.full 2>&1
 $sudo ./Install </dev/null >>$here/$seq.full
 cd $here
diff --git a/qa/1021 b/qa/1021
index 33cdd7f..c1dcbf9 100755
--- a/qa/1021
+++ b/qa/1021
@@ -4,7 +4,7 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 # real QA test starts here
 
diff --git a/qa/1022 b/qa/1022
index 8ace53f..ee7c7c1 100755
--- a/qa/1022
+++ b/qa/1022
@@ -5,7 +5,7 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 status=0	# success is the default!
 trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15
diff --git a/qa/1023 b/qa/1023
index 37c8374..2efe1c9 100755
--- a/qa/1023
+++ b/qa/1023
@@ -4,7 +4,7 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 status=1	# failure is the default!
 trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15
diff --git a/qa/1025 b/qa/1025
index 492ae36..c0c8679 100755
--- a/qa/1025
+++ b/qa/1025
@@ -4,7 +4,7 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 status=1	# failure is the default!
 trap "_cleanup; exit \$status" 0 1 2 3 15
diff --git a/qa/1026 b/qa/1026
index f8a25a5..5e0e67e 100755
--- a/qa/1026
+++ b/qa/1026
@@ -4,20 +4,15 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 status=0	# success is the default!
 trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15
 
-cd "$PCP_VAR_DIR/testsuite" || \
-	_notrun "Cannot find PCP QA testsuite directory"
-[ -x ./getpmcdhosts ] || \
-	_notrun "Cannot find getpmcdhosts script from PCP QA"
 multi=`./getpmcdhosts -p multi -n 1`
-[ $? -eq 0 ] || cd $here && _notrun "Cannot get remote multi-CPU machine"
+[ -z "$multi" ] && _notrun "Cannot get remote multi-CPU machine"
 single=`./getpmcdhosts -p single -n 1`
-[ $? -eq 0 ] || cd $here && _notrun "Cannot get remote single-CPU machine"
-cd $here
+[ -z "$single" ] && _notrun "Cannot get remote single-CPU machine"
 
 _filter()
 {
diff --git a/qa/1027 b/qa/1027
index ebd08ce..5fefc8e 100755
--- a/qa/1027
+++ b/qa/1027
@@ -4,7 +4,7 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 status=0	# success is the default!
 trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15
diff --git a/qa/1028 b/qa/1028
index 2686ab0..a91bec6 100755
--- a/qa/1028
+++ b/qa/1028
@@ -4,7 +4,7 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 status=1	# failure is the default!
 trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15
diff --git a/qa/1029 b/qa/1029
index 33297a4..3f35b27 100755
--- a/qa/1029
+++ b/qa/1029
@@ -3,7 +3,7 @@
 #
 seq=`basename $0`
 echo "QA output created by $seq"
-. ./common.test
+. ./common.qt
 
 status=1	# failure is the default!
 trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15
diff --git a/qa/GNUmakefile b/qa/GNUmakefile
index 0806d2c..26786d0 100644
--- a/qa/GNUmakefile
+++ b/qa/GNUmakefile
@@ -49,7 +49,7 @@ COMMON_SCRIPTS = common.install.cisco common.pcpweb
 COMMON = common.check common.config common.filter \
 	 common.product common.rc common.setup \
 	 common.secure common.gfs2 common.rpm \
-	 common.python common.sh common.test
+	 common.python common.sh common.qt
 
 OTHERS = GNUmakefile.install group qa_hosts.master README \
 	 valgrind-suppress sanity.coverage
diff --git a/qa/common.qt b/qa/common.qt
new file mode 100644
index 0000000..9ecf986
--- /dev/null
+++ b/qa/common.qt
@@ -0,0 +1,10 @@
+. /etc/pcp.conf
+. ./common.sh
+. ./common.check
+. ./common.filter
+. ./common.config
+
+tmp=/tmp/$$
+here=`pwd`
+sudo=sudo
+host=`hostname`
diff --git a/qa/common.test b/qa/common.test
deleted file mode 100644
index 9ecf986..0000000
--- a/qa/common.test
+++ /dev/null
@@ -1,10 +0,0 @@
-. /etc/pcp.conf
-. ./common.sh
-. ./common.check
-. ./common.filter
-. ./common.config
-
-tmp=/tmp/$$
-here=`pwd`
-sudo=sudo
-host=`hostname`
commit c72755d3f82c41ede486746de48dba44091c0215
Author: Nathan Scott <nathans@redhat.com>
Date:   Thu Jul 10 16:52:09 2014 +1000

    Fix test qa/928 to not assume TZ is EST+10 (.au)
    
    Would have been failing everywhere else for last 2 months or
    so.  Uncovered by Red Hat QE folks in Brno, Czech Republic.

diff --git a/qa/928 b/qa/928
index 4a8572c..38be1c1 100755
--- a/qa/928
+++ b/qa/928
@@ -18,6 +18,7 @@ $sudo rm -rf $tmp.* $seq.full
 trap "cd $here; rm -rf $tmp.*; exit \$status" 0 1 2 3 15
 
 # real QA test starts here
+export TZ=UTC
 
 echo "+++ __pmLogPutresult() +++"
 src/chkputlogresult -b $tmp.1
diff --git a/qa/928.out b/qa/928.out
index e8a90b7..08b6be3 100644
--- a/qa/928.out
+++ b/qa/928.out
@@ -14,8 +14,8 @@ __pmLogPutResult: 5 metrics ...
 __pmLogPutResult: 6 metrics ...
 Log Label (Log Format Version 2)
 Performance metrics from host happycamper
-  commencing Thu Jan  1 10:00:00.000 1970
-  ending     Thu Jan  1 10:00:06.000 1970
+  commencing Thu Jan  1 00:00:00.000 1970
+  ending     Thu Jan  1 00:00:06.000 1970
 
 Descriptions for Metrics in the Log ...
 PMID: 30.0.6 (sampledso.bin)
@@ -39,7 +39,7 @@ PMID: 30.0.10 (sampledso.long.one)
 
 Instance Domains in the Log ...
 InDom: 30.2
-10:00:00.000 9 instances
+00:00:00.000 9 instances
                  100 or "bin-100"
                  200 or "bin-200"
                  300 or "bin-300"
@@ -52,36 +52,36 @@ InDom: 30.2
 
 Temporal Index
              Log Vol    end(meta)     end(log)
-10:00:00.000       0          132          132
-10:00:06.000       0          659          904
+00:00:00.000       0          132          132
+00:00:06.000       0          659          904
 
 [40 bytes]
-10:00:01.000  30.0.10 (sampledso.long.one): value 1
+00:00:01.000  30.0.10 (sampledso.long.one): value 1
 
 [72 bytes]
-10:00:02.000  30.0.10 (sampledso.long.one): value 1
+00:00:02.000  30.0.10 (sampledso.long.one): value 1
               30.0.98 (sampledso.ulonglong.one): value 1
 
 [100 bytes]
-10:00:03.000  30.0.10 (sampledso.long.one): value 1
+00:00:03.000  30.0.10 (sampledso.long.one): value 1
               30.0.98 (sampledso.ulonglong.one): value 1
               30.0.15 (sampledso.float.one): value 1
 
 [132 bytes]
-10:00:04.000  30.0.10 (sampledso.long.one): value 1
+00:00:04.000  30.0.10 (sampledso.long.one): value 1
               30.0.98 (sampledso.ulonglong.one): value 1
               30.0.15 (sampledso.float.one): value 1
               30.0.25 (sampledso.double.one): value 1
 
 [172 bytes]
-10:00:05.000  30.0.10 (sampledso.long.one): value 1
+00:00:05.000  30.0.10 (sampledso.long.one): value 1
               30.0.98 (sampledso.ulonglong.one): value 1
               30.0.15 (sampledso.float.one): value 1
               30.0.25 (sampledso.double.one): value 1
               30.0.31 (sampledso.string.hullo): value "hullo world!"
 
 [256 bytes]
-10:00:06.000  30.0.10 (sampledso.long.one): value 1
+00:00:06.000  30.0.10 (sampledso.long.one): value 1
               30.0.98 (sampledso.ulonglong.one): value 1
               30.0.15 (sampledso.float.one): value 1
               30.0.25 (sampledso.double.one): value 1
@@ -112,8 +112,8 @@ __pmLogPutResult2: 5 metrics ...
 __pmLogPutResult2: 6 metrics ...
 Log Label (Log Format Version 2)
 Performance metrics from host happycamper
-  commencing Thu Jan  1 10:00:00.000 1970
-  ending     Thu Jan  1 10:00:06.000 1970
+  commencing Thu Jan  1 00:00:00.000 1970
+  ending     Thu Jan  1 00:00:06.000 1970
 
 Descriptions for Metrics in the Log ...
 PMID: 30.0.6 (sampledso.bin)
@@ -137,7 +137,7 @@ PMID: 30.0.10 (sampledso.long.one)
 
 Instance Domains in the Log ...
 InDom: 30.2
-10:00:00.000 9 instances
+00:00:00.000 9 instances
                  100 or "bin-100"
                  200 or "bin-200"
                  300 or "bin-300"
@@ -150,36 +150,36 @@ InDom: 30.2
 
 Temporal Index
              Log Vol    end(meta)     end(log)
-10:00:00.000       0          132          132
-10:00:06.000       0          659          904
+00:00:00.000       0          132          132
+00:00:06.000       0          659          904
 
 [40 bytes]
-10:00:01.000  30.0.10 (sampledso.long.one): value 1
+00:00:01.000  30.0.10 (sampledso.long.one): value 1
 
 [72 bytes]
-10:00:02.000  30.0.10 (sampledso.long.one): value 1
+00:00:02.000  30.0.10 (sampledso.long.one): value 1
               30.0.98 (sampledso.ulonglong.one): value 1
 
 [100 bytes]
-10:00:03.000  30.0.10 (sampledso.long.one): value 1
+00:00:03.000  30.0.10 (sampledso.long.one): value 1
               30.0.98 (sampledso.ulonglong.one): value 1
               30.0.15 (sampledso.float.one): value 1
 
 [132 bytes]
-10:00:04.000  30.0.10 (sampledso.long.one): value 1
+00:00:04.000  30.0.10 (sampledso.long.one): value 1
               30.0.98 (sampledso.ulonglong.one): value 1
               30.0.15 (sampledso.float.one): value 1
               30.0.25 (sampledso.double.one): value 1
 
 [172 bytes]
-10:00:05.000  30.0.10 (sampledso.long.one): value 1
+00:00:05.000  30.0.10 (sampledso.long.one): value 1
               30.0.98 (sampledso.ulonglong.one): value 1
               30.0.15 (sampledso.float.one): value 1
               30.0.25 (sampledso.double.one): value 1
               30.0.31 (sampledso.string.hullo): value "hullo world!"
 
 [256 bytes]
-10:00:06.000  30.0.10 (sampledso.long.one): value 1
+00:00:06.000  30.0.10 (sampledso.long.one): value 1
               30.0.98 (sampledso.ulonglong.one): value 1
               30.0.15 (sampledso.float.one): value 1
               30.0.25 (sampledso.double.one): value 1
commit 39c9e5640929dc8f48c15276084cab0f12846c57
Author: Nathan Scott <nathans@redhat.com>
Date:   Mon Jul 14 14:22:13 2014 +1000

    libpcp: make avahi_entry_group_new diagnostic debug-conditional
    
    Resolve failures in test qa/283 where spurious messages were
    produced in pmcd.log on boxen without avahi-daemon running.

diff --git a/src/libpcp/src/avahi.c b/src/libpcp/src/avahi.c
index 5e02365..d8a7ef7 100644
--- a/src/libpcp/src/avahi.c
+++ b/src/libpcp/src/avahi.c
@@ -103,17 +103,18 @@ createServices(AvahiClient *c)
     int ret;
     int i;
 
-    assert (c);
+    assert(c);
 
      /*
       * Create a new entry group, if necessary, or reset the existing one.
       */
     if (group == NULL) {
 	if ((group = avahi_entry_group_new(c, entryGroupCallback, NULL)) == NULL) {
- 	    __pmNotifyErr(LOG_ERR, "avahi_entry_group_new () failed: %s",
- 			  avahi_strerror (avahi_client_errno(c)));
+	    if (pmDebug & DBG_TRACE_DISCOVERY)
+		__pmNotifyErr(LOG_ERR, "avahi_entry_group_new failed: %s",
+			  avahi_strerror(avahi_client_errno(c)));
 	    return;
- 	}
+	}
     }
     else
 	avahi_entry_group_reset(group);
commit fd6c591c65cce843bf9fc6aa3b7d19b2c7ad17f0
Author: Nathan Scott <nathans@redhat.com>
Date:   Mon Jul 14 15:01:24 2014 +1000

    Filter NSPR memory leaks from the valgrind-checked set.

diff --git a/qa/valgrind-suppress b/qa/valgrind-suppress
index 79a5330..d1efe33 100644
--- a/qa/valgrind-suppress
+++ b/qa/valgrind-suppress
@@ -94,3 +94,11 @@
    ...
    fun:NSS*
 }
+
+{
+   NSPR library leak catch-all
+   Memcheck:Leak
+   fun:?alloc
+   ...
+   fun:PR_*
+}
commit d4a9e1e1430050bb6c8a5f483697a8701fa1370f
Author: Nathan Scott <nathans@redhat.com>
Date:   Mon Jul 14 14:30:06 2014 +1000

    Ensure the same locale is set for sort and join commands
    
    The join command checks the input is sorted using the same locale
    as sort, differences here have been observed to cause join(1) to
    fail with "join: file1 is not sorted" in test qa/128.  Audit all
    of the joins and ensure they match their sorts.
    
    Additionally, the perl scriptlet generating nfsstats was using an
    incorrect string comparison operator, which was observed on still
    other platforms to generate no reduce nfsstat output to nothing.

diff --git a/qa/113 b/qa/113
index 8f7bb8b..b7fbbb0 100755
--- a/qa/113
+++ b/qa/113
@@ -292,7 +292,7 @@ $sudo df -li >>$seq.full 2>&1
 echo "-- df-filtered --" >>$seq.full
 cat $tmp.2 >>$seq.full
 
-join -a2 -1 1 $tmp.1 $tmp.2 \
+LC_COLLATE=POSIX join -a2 -1 1 $tmp.1 $tmp.2 \
 | $PCP_AWK_PROG '{
     a=$2; b=$3; d=a-b;
     if (d<0) d = -d;
diff --git a/qa/120 b/qa/120
index d38e4d4..8f406a0 100755
--- a/qa/120
+++ b/qa/120
@@ -85,7 +85,7 @@ fi
 #	 printf("%d\t%s", delta, metric_name)
 #
 echo '#!/bin/sh' >$tmp.sh
-join -j 1 -o 2.2 1.2 1.1 -e ERR $tmp.vals.1 $tmp.vals.2 \
+LC_COLLATE=POSIX join -j 1 -o 2.2 1.2 1.1 -e ERR $tmp.vals.1 $tmp.vals.2 \
     | $PCP_AWK_PROG '{ printf "echo %s `expr %d - %d`\n", $3, $1, $2 }' \
     >> $tmp.sh
 sh $tmp.sh >$tmp.delta
@@ -156,7 +156,7 @@ mv $tmp.filtered $tmp.delta.expect
 #
 echo '#!/bin/sh' >$tmp.delta.sh
 echo 'sts=0' >>$tmp.delta.sh
-join -j 1 -o 1.2 2.2 1.1 $tmp.delta $tmp.delta.expect \
+LC_COLLATE=POSIX join -j 1 -o 1.2 2.2 1.1 $tmp.delta $tmp.delta.expect \
     | tee $tmp.join \
     | $PCP_AWK_PROG '{
 	      printf "[ %d -lt %d ]", $1, $2;
diff --git a/qa/128 b/qa/128
index 8af47eb..478b3e9 100755
--- a/qa/128
+++ b/qa/128
@@ -31,7 +31,7 @@ get_pminfo()
             }
         }
         close STATS;
-    ' | LC_COLLATE=POSIX sort
+    '
 }
 
 get_nfsstat()
@@ -49,7 +49,7 @@ get_nfsstat()
 	    # another NFS version.
 	    elsif (m/client nfs v4/i)       { $prefix = ""; }
 	    elsif (m/server nfs v4/i)	    { $prefix = ""; }
-    	    elsif ($prefix == "")	    { next; }
+    	    elsif ($prefix eq "")	    { next; }
 	    elsif (m/((\d+)\s+\d+%)+/g) {
 		@values = split(/\s+/);
 		#print "found - @values, @instances\n";
@@ -63,7 +63,7 @@ get_nfsstat()
 	    }
 	}
 	close STATS;
-    ' | LC_COLLATE=POSIX sort
+    '
 }
 
 # real QA test starts here
@@ -84,11 +84,12 @@ chmod u+x $tmp.workload
 $tmp.workload >/dev/null 2>&1
 sleep 2
 
-rm -f $tmp.info $tmp.stat $tmp.join $seq.full
+rm -f $tmp.info $tmp.stat $tmp.join $seq.full $tmp.info2 $tmp.stat2
 
 echo | tee -a $seq.full
 echo "fetching nfsstat values..." | tee -a $seq.full
 get_nfsstat 2>$tmp.err | tee -a $seq.full >$tmp.stat 
+LC_COLLATE=POSIX sort -d < $tmp.stat > $tmp.stat2
 ( echo "stderr from get_nfsstat ..."; cat $tmp.err ) >>$seq.full
 
 echo | tee -a $seq.full
@@ -101,7 +102,7 @@ LC_COLLATE=POSIX sort -d < $tmp.info > $tmp.info2
 
 echo | tee -a $seq.full
 echo "comparing all values... (details in $seq.full)" | tee -a $seq.full
-join $tmp.info2 $tmp.stat | while read metric nfsvalue pmvalue
+LC_COLLATE=POSIX join $tmp.info2 $tmp.stat2 | while read metric nfsvalue pmvalue
 do
 	_within_tolerance $metric $nfsvalue $pmvalue 2% -v >>$seq.full
 	[ $? -eq 1 ] && echo failed cross check on $metric: $nfsvalue $pmvalue
diff --git a/qa/148 b/qa/148
index dc8de57..4356e56 100755
--- a/qa/148
+++ b/qa/148
@@ -72,7 +72,7 @@ s/ .* value / /p
 }' \
 | LC_COLLATE=POSIX sort >$tmp.2
 
-join $tmp.1 $tmp.2 >$tmp.pcp
+LC_COLLATE=POSIX join $tmp.1 $tmp.2 >$tmp.pcp
 
 if diff $tmp.pcp $tmp.ipc
 then
diff --git a/qa/348 b/qa/348
index 30494ba..bd74284 100755
--- a/qa/348
+++ b/qa/348
@@ -111,7 +111,7 @@ done
 LC_COLLATE=POSIX sort $tmp.stats > $tmp.values
 echo "from /sys/kernel/debug/kvm ..." >>$here/$seq.full
 cat $tmp.values >>$here/$seq.full
-join $tmp.probe $tmp.values >$tmp.all
+LC_COLLATE=POSIX join $tmp.probe $tmp.values >$tmp.all
 echo >>$here/$seq.full
 cat $tmp.all >>$here/$seq.full
 
diff --git a/qa/635 b/qa/635
index 815c248..5ff1bef 100755
--- a/qa/635
+++ b/qa/635
@@ -192,7 +192,7 @@ do
 	| LC_COLLATE=POSIX sort \
 	> $tmp.vals.$m.2
 
-    join -1 1 -2 1 -o 1.2,2.2,1.1 -t' ' $tmp.vals.$m.1 $tmp.vals.$m.2 >$tmp.vals
+    LC_COLLATE=POSIX join -1 1 -2 1 -o 1.2,2.2,1.1 -t' ' $tmp.vals.$m.1 $tmp.vals.$m.2 >$tmp.vals
     while read v1 v2 inst
     do
 	if [ $v2 -lt $v1 ]
@@ -261,7 +261,7 @@ do
     cat $tmp.vals.$m.2 >>$seq.full
     echo "--- $m netstat ---" >>$seq.full
     cat $tmp.net >>$seq.full
-    join -1 1 -2 1 -o 1.1,2.2,1.2,2.3 $tmp.vals.$m.2 $tmp.net >$tmp.all
+    LC_COLLATE=POSIX join -1 1 -2 1 -o 1.1,2.2,1.2,2.3 $tmp.vals.$m.2 $tmp.net >$tmp.all
 
     while read inst nv1 pcp nv2
     do
commit 761e8a00872210b999624d03b33f9cc9cd440d43
Author: Nathan Scott <nathans@redhat.com>
Date:   Mon Jul 14 15:46:57 2014 +1000

    Update test qa/314 to allow longer for a pmie log rotation

diff --git a/qa/314 b/qa/314
index 6c9355f..dcf5df2 100755
--- a/qa/314
+++ b/qa/314
@@ -74,10 +74,10 @@ oldlines=`wc -l < /tmp/$seq/1.good.log.$previous 2>/dev/null || echo 0`
 newlines=`wc -l < /tmp/$seq/1.good.log 2>/dev/null || echo 0`
 # 5 samples / sec x ~6 sec x 2 lines per sample + 6 lines for header and footer
 # so 66
-_within_tolerance "Old logfile line count" "$oldlines" 66 %50 -v
+_within_tolerance "Old logfile line count" "$oldlines" 66 %75 -v
 # 5 samples / sec x ~3 sec x 2 lines per sample + 6 lines for header and footer
 # so 36
-_within_tolerance "New logfile line count" "$newlines" 36 %50 -v
+_within_tolerance "New logfile line count" "$newlines" 36 %75 -v
 
 echo "=== previous log ($oldlines lines) ===" >>$seq.full
 cat /tmp/$seq/1.good.log.$previous >>$seq.full
commit ed7e935d7c1845c5b9b3b6c01b7f5b9c3a20a580
Author: Nathan Scott <nathans@redhat.com>
Date:   Mon Jul 14 16:07:11 2014 +1000

    Fix test qa/725 to also work correctly on 32-bit hosts

diff --git a/qa/725 b/qa/725
index 595355a..9bc77b3 100755
--- a/qa/725
+++ b/qa/725
@@ -136,6 +136,7 @@ jbd2filter()
 {
     sed \
 	-e 's/64-bit unsigned int/NN-bit unsigned int/g' \
+	-e 's/32-bit unsigned int/NN-bit unsigned int/g' \
 	# the end
 }
 
diff --git a/qa/725.out b/qa/725.out
index f121a70..3da5213 100644
--- a/qa/725.out
+++ b/qa/725.out
@@ -16,7 +16,7 @@ Check jbd2 metrics have appeared ... ok
 
 === validate values, no instances ===
 
-    Data Type: 32-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
+    Data Type: NN-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
     Semantics: instant  Units: count
     value 0
 Count of active JBD2 (Journal Block Device v2) devices
@@ -47,7 +47,7 @@ Help:
 No value(s) available!
 jbd2.transaction.average.handles PMID: 122.0.22 [Average handle count per journal]
 
-    Data Type: 32-bit unsigned int  InDom: 122.0 0x1e800000
+    Data Type: NN-bit unsigned int  InDom: 122.0 0x1e800000
     Semantics: instant  Units: millisec
 Average transaction locked time over all transactions since mount.
 Exported directly from per-device /proc/fs/jbd2 info files.
@@ -63,7 +63,7 @@ No value(s) available!
 jbd2.transaction.average.time.committing PMID: 122.0.19 [Average commit time per journal]
 mount.  Exported directly from per-device /proc/fs/jbd2 info files.
 
-    Data Type: 32-bit unsigned int  InDom: 122.0 0x1e800000
+    Data Type: NN-bit unsigned int  InDom: 122.0 0x1e800000
     Semantics: instant  Units: millisec
 Average time flushing data (ordered mode) for all transactions since
 Help:
@@ -71,7 +71,7 @@ No value(s) available!
 jbd2.transaction.average.time.flushing_ordered_mode_data PMID: 122.0.17 [Average data flush time per journal]
 mount.  Exported directly from per-device /proc/fs/jbd2 info files.
 
-    Data Type: 32-bit unsigned int  InDom: 122.0 0x1e800000
+    Data Type: NN-bit unsigned int  InDom: 122.0 0x1e800000
     Semantics: instant  Units: millisec
 Average time spent logging transactions for all transactions since
 Help:
@@ -79,7 +79,7 @@ No value(s) available!
 jbd2.transaction.average.time.logging PMID: 122.0.18 [Average logging time per journal]
 mount.  Exported directly from per-device /proc/fs/jbd2 info files.
 
-    Data Type: 32-bit unsigned int  InDom: 122.0 0x1e800000
+    Data Type: NN-bit unsigned int  InDom: 122.0 0x1e800000
     Semantics: instant  Units: millisec
 Average request delay for all transactions to complete since mount.
 Exported directly from per-device /proc/fs/jbd2 info files.
@@ -87,7 +87,7 @@ Help:
 No value(s) available!
 jbd2.transaction.average.time.request_delay PMID: 122.0.14 [Average request delay per journal]
 
-    Data Type: 32-bit unsigned int  InDom: 122.0 0x1e800000
+    Data Type: NN-bit unsigned int  InDom: 122.0 0x1e800000
     Semantics: instant  Units: millisec
 Average transaction running time over all transactions since mount.
 Exported directly from per-device /proc/fs/jbd2 info files.
@@ -95,7 +95,7 @@ Help:
 No value(s) available!
 jbd2.transaction.average.time.running PMID: 122.0.15 [Average running time per journal]
 
-    Data Type: 32-bit unsigned int  InDom: 122.0 0x1e800000
+    Data Type: NN-bit unsigned int  InDom: 122.0 0x1e800000
     Semantics: instant  Units: millisec
 Average time spent waiting for transactions to complete since mount.
 Exported directly from per-device /proc/fs/jbd2 info files.
@@ -110,7 +110,7 @@ No value(s) available!
 This metric is sourced from the per-device /proc/fs/jbd2 info file.
 jbd2.transaction.count PMID: 122.0.1 [Total transactions committed per journal]
 
-    Data Type: 32-bit unsigned int  InDom: 122.0 0x1e800000
+    Data Type: NN-bit unsigned int  InDom: 122.0 0x1e800000
     Semantics: instant  Units: none
 Help:
 No value(s) available!
@@ -198,7 +198,7 @@ jbd2.transaction.total.time.waiting PMID: 122.0.4 [Total time waiting per journa
 
 === add some older-format instances ===
 
-    Data Type: 32-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
+    Data Type: NN-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
     Semantics: instant  Units: count
     value 1
 Count of active JBD2 (Journal Block Device v2) devices
@@ -229,7 +229,7 @@ Exported directly from per-device /proc/fs/jbd2 info files.
 Help:
 jbd2.transaction.average.handles PMID: 122.0.22 [Average handle count per journal]
 
-    Data Type: 32-bit unsigned int  InDom: 122.0 0x1e800000
+    Data Type: NN-bit unsigned int  InDom: 122.0 0x1e800000
     Semantics: instant  Units: millisec
     inst [0 or "sda1-8"] value 0
 Average transaction locked time over all transactions since mount.
@@ -245,7 +245,7 @@ Help:
 jbd2.transaction.average.time.committing PMID: 122.0.19 [Average commit time per journal]
 mount.  Exported directly from per-device /proc/fs/jbd2 info files.
 
-    Data Type: 32-bit unsigned int  InDom: 122.0 0x1e800000
+    Data Type: NN-bit unsigned int  InDom: 122.0 0x1e800000
     Semantics: instant  Units: millisec
     inst [0 or "sda1-8"] value 0
 Average time flushing data (ordered mode) for all transactions since
@@ -253,7 +253,7 @@ Help:
 jbd2.transaction.average.time.flushing_ordered_mode_data PMID: 122.0.17 [Average data flush time per journal]
 mount.  Exported directly from per-device /proc/fs/jbd2 info files.
 
-    Data Type: 32-bit unsigned int  InDom: 122.0 0x1e800000
+    Data Type: NN-bit unsigned int  InDom: 122.0 0x1e800000
     Semantics: instant  Units: millisec
     inst [0 or "sda1-8"] value 35
 Average time spent logging transactions for all transactions since
@@ -261,7 +261,7 @@ Help:
 jbd2.transaction.average.time.logging PMID: 122.0.18 [Average logging time per journal]
 mount.  Exported directly from per-device /proc/fs/jbd2 info files.
 
-    Data Type: 32-bit unsigned int  InDom: 122.0 0x1e800000
+    Data Type: NN-bit unsigned int  InDom: 122.0 0x1e800000
     Semantics: instant  Units: millisec
 Average request delay for all transactions to complete since mount.
 Exported directly from per-device /proc/fs/jbd2 info files.
@@ -269,7 +269,7 @@ Help:
 No value(s) available!
 jbd2.transaction.average.time.request_delay PMID: 122.0.14 [Average request delay per journal]
 
-    Data Type: 32-bit unsigned int  InDom: 122.0 0x1e800000
+    Data Type: NN-bit unsigned int  InDom: 122.0 0x1e800000
     Semantics: instant  Units: millisec
     inst [0 or "sda1-8"] value 5327
 Average transaction running time over all transactions since mount.
@@ -277,7 +277,7 @@ Exported directly from per-device /proc/fs/jbd2 info files.
 Help:
 jbd2.transaction.average.time.running PMID: 122.0.15 [Average running time per journal]
 
-    Data Type: 32-bit unsigned int  InDom: 122.0 0x1e800000
+    Data Type: NN-bit unsigned int  InDom: 122.0 0x1e800000
     Semantics: instant  Units: millisec
     inst [0 or "sda1-8"] value 0
 Average time spent waiting for transactions to complete since mount.
@@ -292,7 +292,7 @@ Help:
 This metric is sourced from the per-device /proc/fs/jbd2 info file.
 jbd2.transaction.count PMID: 122.0.1 [Total transactions committed per journal]
 
-    Data Type: 32-bit unsigned int  InDom: 122.0 0x1e800000
+    Data Type: NN-bit unsigned int  InDom: 122.0 0x1e800000
     Semantics: instant  Units: none
     inst [0 or "sda1-8"] value 2048
 Help:
@@ -380,7 +380,7 @@ jbd2.transaction.total.time.waiting PMID: 122.0.4 [Total time waiting per journa
 
 === add some newer-format instances ===
 
-    Data Type: 32-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
+    Data Type: NN-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
     Semantics: instant  Units: count
     value 1
 Count of active JBD2 (Journal Block Device v2) devices
@@ -411,7 +411,7 @@ Exported directly from per-device /proc/fs/jbd2 info files.
 Help:
 jbd2.transaction.average.handles PMID: 122.0.22 [Average handle count per journal]
 
-    Data Type: 32-bit unsigned int  InDom: 122.0 0x1e800000
+    Data Type: NN-bit unsigned int  InDom: 122.0 0x1e800000
     Semantics: instant  Units: millisec
     inst [1 or "dm-1-8"] value 0
 Average transaction locked time over all transactions since mount.
@@ -427,7 +427,7 @@ Help:
 jbd2.transaction.average.time.committing PMID: 122.0.19 [Average commit time per journal]
 mount.  Exported directly from per-device /proc/fs/jbd2 info files.
 
-    Data Type: 32-bit unsigned int  InDom: 122.0 0x1e800000
+    Data Type: NN-bit unsigned int  InDom: 122.0 0x1e800000
     Semantics: instant  Units: millisec
     inst [1 or "dm-1-8"] value 0
 Average time flushing data (ordered mode) for all transactions since
@@ -435,7 +435,7 @@ Help:
 jbd2.transaction.average.time.flushing_ordered_mode_data PMID: 122.0.17 [Average data flush time per journal]
 mount.  Exported directly from per-device /proc/fs/jbd2 info files.
 
-    Data Type: 32-bit unsigned int  InDom: 122.0 0x1e800000
+    Data Type: NN-bit unsigned int  InDom: 122.0 0x1e800000
     Semantics: instant  Units: millisec
     inst [1 or "dm-1-8"] value 26
 Average time spent logging transactions for all transactions since
@@ -443,7 +443,7 @@ Help:
 jbd2.transaction.average.time.logging PMID: 122.0.18 [Average logging time per journal]
 mount.  Exported directly from per-device /proc/fs/jbd2 info files.
 
-    Data Type: 32-bit unsigned int  InDom: 122.0 0x1e800000
+    Data Type: NN-bit unsigned int  InDom: 122.0 0x1e800000
     Semantics: instant  Units: millisec
     inst [1 or "dm-1-8"] value 0
 Average request delay for all transactions to complete since mount.
@@ -451,7 +451,7 @@ Exported directly from per-device /proc/fs/jbd2 info files.
 Help:
 jbd2.transaction.average.time.request_delay PMID: 122.0.14 [Average request delay per journal]
 
-    Data Type: 32-bit unsigned int  InDom: 122.0 0x1e800000
+    Data Type: NN-bit unsigned int  InDom: 122.0 0x1e800000
     Semantics: instant  Units: millisec
     inst [1 or "dm-1-8"] value 4019
 Average transaction running time over all transactions since mount.
@@ -459,7 +459,7 @@ Exported directly from per-device /proc/fs/jbd2 info files.
 Help:
 jbd2.transaction.average.time.running PMID: 122.0.15 [Average running time per journal]
 
-    Data Type: 32-bit unsigned int  InDom: 122.0 0x1e800000
+    Data Type: NN-bit unsigned int  InDom: 122.0 0x1e800000
     Semantics: instant  Units: millisec
     inst [1 or "dm-1-8"] value 0
 Average time spent waiting for transactions to complete since mount.
@@ -474,7 +474,7 @@ Help:
 This metric is sourced from the per-device /proc/fs/jbd2 info file.
 jbd2.transaction.count PMID: 122.0.1 [Total transactions committed per journal]
 
-    Data Type: 32-bit unsigned int  InDom: 122.0 0x1e800000
+    Data Type: NN-bit unsigned int  InDom: 122.0 0x1e800000
     Semantics: instant  Units: none
     inst [1 or "dm-1-8"] value 8192
 Help:
commit 4177cb1794cc4f3709b1b53a6aac085c9aa553b5
Author: Nathan Scott <nathans@redhat.com>
Date:   Mon Jul 14 18:03:14 2014 +1000

    Resolve a race in qa/178 parallel pmlogger startup
    
    Its possible that multiple pmloggers end up choosing the
    same "free" port to communicate with pmlc, resulting in
    spurious listen(2) errors in pmlogger log files.

diff --git a/qa/178 b/qa/178
index e1a4df2..ab80a83 100755
--- a/qa/178
+++ b/qa/178
@@ -11,6 +11,7 @@ echo "QA output created by $seq"
 # get standard filters
 . ./common.product
 . ./common.filter
+. ./common.check
 
 trap "rm -f $tmp.*; exit" 0 1 2 3 15
 #debug# tmp=`pwd`/tmp
@@ -74,11 +75,21 @@ log mandatory on 300 msec {
 }
 End-of-File
 
+# find a port for each pmlogger to use, avoiding (small!) race
+# when starting multiple pmlogger processes at the same time.
+port1=`_find_free_port`
+port2=`expr $port1 + 1`
+port2=`_find_free_port $port2`
+port3=`expr $port2 + 1`
+port3=`_find_free_port $port3`
+
 # a and b concurrently
 # a: 25 x 0.6 sec
 # b: 20 x 0.3 sec
 #
+PMLOGGER_PORT=$port1 \
 pmlogger -c $tmp.a.config -l $tmp.a.log -s 25 $tmp.a >$tmp.a.err 2>&1 &
+PMLOGGER_PORT=$port2 \
 pmlogger -c $tmp.b.config -l $tmp.b.log -s 20 $tmp.b >$tmp.b.err 2>&1 &
 
 wait
@@ -90,6 +101,7 @@ cat $tmp.b.err $tmp.b.log | tee -a $seq.full | _filter_pmlogger_log
 
 # c later
 #
+PMLOGGER_PORT=$port3 \
 pmlogger -c $tmp.c.config -l $tmp.c.log -s 10 $tmp.c >$tmp.c.err 2>&1
 echo >>$seq.full
 echo "log for archive 'c' ..." >>$seq.full
commit 9279ce5b03d9dfd60ebbc638189d086c4d27258e
Author: Nathan Scott <nathans@redhat.com>
Date:   Mon Jul 14 18:06:34 2014 +1000

    Fix qa/943 failure, PM_ERR_INST for proc cgroup metrics
    
    On older kernels, the per-process cgroup files are often empty.
    Update the per-process PMDA code such that it detects this and
    responds more approriately.

diff --git a/src/pmdas/linux_proc/pmda.c b/src/pmdas/linux_proc/pmda.c
index 8a84423..2d40a54 100644
--- a/src/pmdas/linux_proc/pmda.c
+++ b/src/pmdas/linux_proc/pmda.c
@@ -1570,9 +1570,13 @@ proc_fetchCallBack(pmdaMetric *mdesc, unsigned int inst, pmAtomValue *atom)
 	    return PM_ERR_PERMISSION;
 	if (idp->item > PROC_PID_CGROUP)
 	    return PM_ERR_PMID;
-	if ((entry = fetch_proc_pid_cgroup(inst, &proc_pid)) == NULL)
-	    return (oserror() == ENOENT) ? PM_ERR_APPVERSION : PM_ERR_INST;
-	atom->cp = proc_strings_lookup(entry->cgroup_id);
+	if ((entry = fetch_proc_pid_cgroup(inst, &proc_pid)) == NULL) {
+	    if (oserror() == ENOENT) return PM_ERR_APPVERSION;
+	    if (oserror() != ENODATA) return PM_ERR_INST;
+	    atom->cp = "";
+	} else {
+	    atom->cp = proc_strings_lookup(entry->cgroup_id);
+	}
 	break;
 
     case CLUSTER_PID_LABEL:
@@ -1580,9 +1584,13 @@ proc_fetchCallBack(pmdaMetric *mdesc, unsigned int inst, pmAtomValue *atom)
 	    return PM_ERR_PERMISSION;
 	if (idp->item > PROC_PID_LABEL)
 	    return PM_ERR_PMID;
-	if ((entry = fetch_proc_pid_label(inst, &proc_pid)) == NULL)
-	    return (oserror() == ENOENT) ? PM_ERR_APPVERSION : PM_ERR_INST;
-	atom->cp = proc_strings_lookup(entry->label_id);
+	if ((entry = fetch_proc_pid_label(inst, &proc_pid)) == NULL) {
+	    if (oserror() == ENOENT) return PM_ERR_APPVERSION;
+	    if (oserror() != ENODATA) return PM_ERR_INST;
+	    atom->cp = "";
+	} else {
+	    atom->cp = proc_strings_lookup(entry->label_id);
+	}
 	break;
 
     case CLUSTER_CONTROL:
diff --git a/src/pmdas/linux_proc/proc_pid.c b/src/pmdas/linux_proc/proc_pid.c
index baa9002..152d96c 100644
--- a/src/pmdas/linux_proc/proc_pid.c
+++ b/src/pmdas/linux_proc/proc_pid.c
@@ -858,8 +858,10 @@ fetch_proc_pid_cgroup(int id, proc_pid_t *proc_pid)
 	else if ((n = read(fd, buf, sizeof(buf))) < 0)
 	    sts = -oserror();
 	else {
-	    if (n == 0)
+	    if (n == 0) {
+		setoserror(ENODATA);
 		sts = -1;
+	    }
 	    else {
 		/* reformat the buffer to match "ps" output format, then hash */
 		proc_cgroup_reformat(&buf[0], n, &fmt[0]);
@@ -897,9 +899,10 @@ fetch_proc_pid_label(int id, proc_pid_t *proc_pid)
 	else if ((n = read(fd, buf, sizeof(buf))) < 0)
 	    sts = -oserror();
 	else {
-	    if (n == 0)
+	    if (n == 0) {
+		setoserror(ENODATA);
 		sts = -1;
-	    else {
+	    } else {
 		/* buffer matches "ps" output format, direct hash */
 		buf[sizeof(buf)-1] = '\0';
 		ep->label_id = proc_strings_insert(buf);
commit cdfa900f4286f4eaf79bfa819d488180f2fa4a4d
Author: Nathan Scott <nathans@redhat.com>
Date:   Tue Jul 15 13:44:06 2014 +1000

    Fix qa/061 filter - long hostnames causing pmresult differences
    
    Test 061 can produce different output on different hosts as a result
    of the log preamble result write (v2 logs with pmcd.pmlogger.* in an
    initial result).  Filter the first result write size but keep all of
    the subsequent result sizes in the output, as these are under test.

diff --git a/qa/061 b/qa/061
index 9dee9dc..205bafc 100755
--- a/qa/061
+++ b/qa/061
@@ -16,9 +16,12 @@ echo "QA output created by $seq"
 trap "$sudo rm -f $tmp.*; exit" 0 1 2 3 15
 signal=$PCP_BINADM_DIR/pmsignal
 
-# this line changed from msec to usec in 3.5.9
+# Note1 - this line changed from msec to usec in 3.5.9:
 # state: not in log, unavail, mand, on delta: 0 usec numpmid: 1
 #
+# Note2 - the first (posn=132) logputresult is the preamble
+# and size of this result is influenced by hostname length.
+#
 _filter_pmlogger()
 {
     _filter_pmlogger_log \
@@ -32,6 +35,7 @@ _filter_pmlogger()
 	-e 's/value [0-9]*/value INT/g' \
 	-e 's/[0-2][0-9]:00:00.000/TIME/' \
 	-e '/logputresult/{
+s/output len=[0-9]* posn=132/output len=NNN posn=132/g
 s/len=[0-9]*/len=NNN/
 s/posn=[0-9]*/posn=NNN/
 }' \
diff --git a/qa/061.out b/qa/061.out
index fc98737..b451d19 100644
--- a/qa/061.out
+++ b/qa/061.out
@@ -25,7 +25,7 @@ PMIDs: [1] 29.0.5
       instances: [1] 2
 
 Archive basename: ARCHIVE
-logputresult: pdubuf=ADDR input len=NNN output len=124 posn=NNN
+logputresult: pdubuf=ADDR input len=NNN output len=NNN posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
 logputresult: pdubuf=ADDR input len=NNN output len=40 posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
@@ -73,7 +73,7 @@ PMIDs: [1] 29.0.5
       instances: [1] 2
 
 Archive basename: ARCHIVE
-logputresult: pdubuf=ADDR input len=NNN output len=124 posn=NNN
+logputresult: pdubuf=ADDR input len=NNN output len=NNN posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
 do_control: control=13 state=0 delta=5000 request ...
 LogControl dump from ADDR numpmid: 1
@@ -117,7 +117,7 @@ PMIDs: [1] 29.0.5
       instances: [1] 2
 
 Archive basename: ARCHIVE
-logputresult: pdubuf=ADDR input len=NNN output len=124 posn=NNN
+logputresult: pdubuf=ADDR input len=NNN output len=NNN posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
 do_control: control=13 state=0 delta=5000 request ...
 LogControl dump from ADDR numpmid: 1
@@ -164,7 +164,7 @@ PMIDs: [1] 29.0.5
       instances: [1] 2
 
 Archive basename: ARCHIVE
-logputresult: pdubuf=ADDR input len=NNN output len=124 posn=NNN
+logputresult: pdubuf=ADDR input len=NNN output len=NNN posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
 logputresult: pdubuf=ADDR input len=NNN output len=40 posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
@@ -215,7 +215,7 @@ PMIDs: [1] 29.0.5
       instances: [1] 2
 
 Archive basename: ARCHIVE
-logputresult: pdubuf=ADDR input len=NNN output len=124 posn=NNN
+logputresult: pdubuf=ADDR input len=NNN output len=NNN posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
 logputresult: pdubuf=ADDR input len=NNN output len=40 posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
@@ -263,7 +263,7 @@ PMIDs: [1] 29.0.5
       instances: [1] 2
 
 Archive basename: ARCHIVE
-logputresult: pdubuf=ADDR input len=NNN output len=124 posn=NNN
+logputresult: pdubuf=ADDR input len=NNN output len=NNN posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
 logputresult: pdubuf=ADDR input len=NNN output len=40 posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
@@ -311,7 +311,7 @@ PMIDs: [1] 29.0.5
       instances: [1] 2
 
 Archive basename: ARCHIVE
-logputresult: pdubuf=ADDR input len=NNN output len=124 posn=NNN
+logputresult: pdubuf=ADDR input len=NNN output len=NNN posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
 do_control: control=13 state=0 delta=5000 request ...
 LogControl dump from ADDR numpmid: 1
@@ -355,7 +355,7 @@ PMIDs: [1] 29.0.5
       instances: [1] 2
 
 Archive basename: ARCHIVE
-logputresult: pdubuf=ADDR input len=NNN output len=124 posn=NNN
+logputresult: pdubuf=ADDR input len=NNN output len=NNN posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
 do_control: control=13 state=0 delta=5000 request ...
 LogControl dump from ADDR numpmid: 1
@@ -399,7 +399,7 @@ PMIDs: [1] 29.0.5
       instances: [1] 2
 
 Archive basename: ARCHIVE
-logputresult: pdubuf=ADDR input len=NNN output len=124 posn=NNN
+logputresult: pdubuf=ADDR input len=NNN output len=NNN posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
 logputresult: pdubuf=ADDR input len=NNN output len=40 posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
@@ -447,7 +447,7 @@ PMIDs: [1] 29.0.5
       instances: [1] 2
 
 Archive basename: ARCHIVE
-logputresult: pdubuf=ADDR input len=NNN output len=124 posn=NNN
+logputresult: pdubuf=ADDR input len=NNN output len=NNN posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
 do_control: control=13 state=0 delta=5000 request ...
 LogControl dump from ADDR numpmid: 1
@@ -491,7 +491,7 @@ PMIDs: [1] 29.0.5
       instances: [1] 2
 
 Archive basename: ARCHIVE
-logputresult: pdubuf=ADDR input len=NNN output len=124 posn=NNN
+logputresult: pdubuf=ADDR input len=NNN output len=NNN posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
 logputresult: pdubuf=ADDR input len=NNN output len=40 posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
@@ -539,7 +539,7 @@ PMIDs: [1] 29.0.5
       instances: [1] 2
 
 Archive basename: ARCHIVE
-logputresult: pdubuf=ADDR input len=NNN output len=124 posn=NNN
+logputresult: pdubuf=ADDR input len=NNN output len=NNN posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
 do_control: control=13 state=0 delta=5000 request ...
 LogControl dump from ADDR numpmid: 1
@@ -583,7 +583,7 @@ PMIDs: [1] 29.0.5
       instances: [1] 2
 
 Archive basename: ARCHIVE
-logputresult: pdubuf=ADDR input len=NNN output len=124 posn=NNN
+logputresult: pdubuf=ADDR input len=NNN output len=NNN posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
 do_control: control=13 state=0 delta=5000 request ...
 LogControl dump from ADDR numpmid: 1
@@ -630,7 +630,7 @@ PMIDs: [1] 29.0.5
       instances: [1] 2
 
 Archive basename: ARCHIVE
-logputresult: pdubuf=ADDR input len=NNN output len=124 posn=NNN
+logputresult: pdubuf=ADDR input len=NNN output len=NNN posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
 do_control: control=13 state=0 delta=5000 request ...
 LogControl dump from ADDR numpmid: 1
@@ -677,7 +677,7 @@ PMIDs: [1] 29.0.5
       instances: [1] 2
 
 Archive basename: ARCHIVE
-logputresult: pdubuf=ADDR input len=NNN output len=124 posn=NNN
+logputresult: pdubuf=ADDR input len=NNN output len=NNN posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
 do_control: control=13 state=0 delta=5000 request ...
 LogControl dump from ADDR numpmid: 1
@@ -721,7 +721,7 @@ PMIDs: [1] 29.0.5
       instances: [1] 2
 
 Archive basename: ARCHIVE
-logputresult: pdubuf=ADDR input len=NNN output len=124 posn=NNN
+logputresult: pdubuf=ADDR input len=NNN output len=NNN posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
 logputresult: pdubuf=ADDR input len=NNN output len=40 posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
@@ -769,7 +769,7 @@ PMIDs: [1] 29.0.5
       instances: [1] 2
 
 Archive basename: ARCHIVE
-logputresult: pdubuf=ADDR input len=NNN output len=124 posn=NNN
+logputresult: pdubuf=ADDR input len=NNN output len=NNN posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
 do_control: control=13 state=0 delta=5000 request ...
 LogControl dump from ADDR numpmid: 1
@@ -813,7 +813,7 @@ PMIDs: [1] 29.0.5
       instances: [1] 2
 
 Archive basename: ARCHIVE
-logputresult: pdubuf=ADDR input len=NNN output len=124 posn=NNN
+logputresult: pdubuf=ADDR input len=NNN output len=NNN posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
 do_control: control=13 state=0 delta=5000 request ...
 LogControl dump from ADDR numpmid: 1
@@ -857,7 +857,7 @@ PMIDs: [1] 29.0.5
       instances: [1] 2
 
 Archive basename: ARCHIVE
-logputresult: pdubuf=ADDR input len=NNN output len=124 posn=NNN
+logputresult: pdubuf=ADDR input len=NNN output len=NNN posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
 logputresult: pdubuf=ADDR input len=NNN output len=40 posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
@@ -905,7 +905,7 @@ PMIDs: [1] 29.0.5
       instances: [1] 2
 
 Archive basename: ARCHIVE
-logputresult: pdubuf=ADDR input len=NNN output len=124 posn=NNN
+logputresult: pdubuf=ADDR input len=NNN output len=NNN posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
 do_control: control=13 state=0 delta=5000 request ...
 LogControl dump from ADDR numpmid: 1
@@ -949,7 +949,7 @@ PMIDs: [1] 29.0.5
       instances: [1] 2
 
 Archive basename: ARCHIVE
-logputresult: pdubuf=ADDR input len=NNN output len=124 posn=NNN
+logputresult: pdubuf=ADDR input len=NNN output len=NNN posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
 logputresult: pdubuf=ADDR input len=NNN output len=40 posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
@@ -997,7 +997,7 @@ PMIDs: [1] 29.0.5
       instances: [1] 2
 
 Archive basename: ARCHIVE
-logputresult: pdubuf=ADDR input len=NNN output len=124 posn=NNN
+logputresult: pdubuf=ADDR input len=NNN output len=NNN posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
 do_control: control=13 state=0 delta=5000 request ...
 LogControl dump from ADDR numpmid: 1
@@ -1041,7 +1041,7 @@ PMIDs: [1] 29.0.5
       instances: [1] 2
 
 Archive basename: ARCHIVE
-logputresult: pdubuf=ADDR input len=NNN output len=124 posn=NNN
+logputresult: pdubuf=ADDR input len=NNN output len=NNN posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
 do_control: control=13 state=0 delta=5000 request ...
 LogControl dump from ADDR numpmid: 1
@@ -1085,7 +1085,7 @@ PMIDs: [1] 29.0.5
       instances: [1] 2
 
 Archive basename: ARCHIVE
-logputresult: pdubuf=ADDR input len=NNN output len=124 posn=NNN
+logputresult: pdubuf=ADDR input len=NNN output len=NNN posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
 logputresult: pdubuf=ADDR input len=NNN output len=40 posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
@@ -1133,7 +1133,7 @@ PMIDs: [1] 29.0.5
       instances: [1] 2
 
 Archive basename: ARCHIVE
-logputresult: pdubuf=ADDR input len=NNN output len=124 posn=NNN
+logputresult: pdubuf=ADDR input len=NNN output len=NNN posn=NNN
 __pmLogPutIndex: timestamp=NNN.NNNNNN vol=0 meta posn=NNN log posn=NNN
 do_control: control=13 state=0 delta=5000 request ...
 LogControl dump from ADDR numpmid: 1
commit 07423d8eaf0f9667001f1934bf6ae916dd759fad
Author: Nathan Scott <nathans@redhat.com>
Date:   Tue Jul 15 13:47:09 2014 +1000

    pmdasample: trivial strcpy tweak to defend against older valgrind
    
    On a certain far-flung 64bit architecture, on a relatively old
    enterprise distro, valgrind is producing a bogus warning for an
    eight-byte read on a 3byte strcpy.  Use strncpy to dodge this.

diff --git a/src/pmdas/sample/src/sample.c b/src/pmdas/sample/src/sample.c
index 873945e..2ccb9d2 100644
--- a/src/pmdas/sample/src/sample.c
+++ b/src/pmdas/sample/src/sample.c
@@ -1154,7 +1154,7 @@ init_tables(int dom)
 
     /* local hacks */
     _string = (char *)malloc(3);
-    strcpy(_string, "13");
+    strncpy(_string, "13", sizeof("13"));
     _aggr33 = (pmValueBlock *)malloc(PM_VAL_HDR_SIZE);
     _aggr33->vlen = PM_VAL_HDR_SIZE + 0;
     _aggr33->vtype = PM_TYPE_AGGREGATE;
commit 231f6ea4bcd3372644dba52fee4dbc28ff9b191c
Author: Ken McDonell <kenj@internode.on.net>
Date:   Thu Jun 19 08:31:16 2014 +1000

    qa/common.check - refactor valgrind support
    
    Simple change to expose _filter_valgrind() that can be used with
    roll-your-own valgrind execution (when _run_valgrind is not appropriate).

diff --git a/qa/common.check b/qa/common.check
index bed20fd..722458e 100644
--- a/qa/common.check
+++ b/qa/common.check
@@ -555,6 +555,26 @@ _check_valgrind()
     [ $? -eq 0 ] || _notrun "No valgrind binary found"
 }
 
+_filter_valgrind()
+{
+    sed \
+	-e 's/^==*[1-9][0-9]*==* *//' \
+	-e '/^$/d' \
+	-e '/^Copyright (/d' \
+	-e '/^Using Valgrind-/d' \
+	-e '/^Parent PID:/d' \
+	-e '/^HEAP SUMMARY:/d' \
+	-e '/^in use at exit:/d' \
+	-e '/^total heap usage:/d' \
+	-e '/^possibly lost:/d' \
+	-e '/^still reachable:/d' \
+	-e '/^suppressed:/d' \
+	-e '/^Reachable blocks (those to which a pointer was found)/d' \
+	-e '/^To see them, rerun with:/d' \
+	-e '/^For counts of detected and suppressed errors,/d' \
+	-e '/^ERROR SUMMARY:/s/ (suppressed: [^)]*)/ .../'
+}
+
 _run_valgrind()
 {
     __version=`valgrind --version | sed -e 's/valgrind-//'`
@@ -576,22 +596,7 @@ _run_valgrind()
     echo "=== valgrind report ===" >>$seq.full
     cat $tmp._valgrind >>$seq.full
     echo "=== filtered valgrind report ==="
-    sed <$tmp._valgrind \
-	-e 's/^==*[1-9][0-9]*==* *//' \
-	-e '/^$/d' \
-	-e '/^Copyright (/d' \
-	-e '/^Using Valgrind-/d' \
-	-e '/^Parent PID:/d' \
-	-e '/^HEAP SUMMARY:/d' \
-	-e '/^in use at exit:/d' \
-	-e '/^total heap usage:/d' \
-	-e '/^possibly lost:/d' \
-	-e '/^still reachable:/d' \
-	-e '/^suppressed:/d' \
-	-e '/^Reachable blocks (those to which a pointer was found)/d' \
-	-e '/^To see them, rerun with:/d' \
-	-e '/^For counts of detected and suppressed errors,/d' \
-	-e '/^ERROR SUMMARY:/s/ (suppressed: [^)]*)/ .../'
+    _filter_valgrind <$tmp._valgrind
 }
 
 #
commit 6fa3558b0735b6a03a84fc78cf81764abf35f7cb
Author: Nathan Scott <nathans@redhat.com>
Date:   Tue Aug 5 17:33:35 2014 +1000

    Fix pmlogger_daily PCP_RUN_DIR creation checks
    
    An older version of PCP has seen a cron-error report of:
    
    > /usr/libexec/pcp/bin/pmlogger_daily: line 365: /var/run/pcp/pmlogger_daily.pid: No such file or directory
    
    This results from an incorrect directory-existance test before
    creating PCP_RUN_DIR.  However, some lack of clarity in the exit
    trap handler caused some initial confusion around that being the
    possible root cause, so that has been tidied up a little too.
    
    Resolves Red Hat bug #1125700.

diff --git a/src/pmlogger/pmlogger_daily.sh b/src/pmlogger/pmlogger_daily.sh
index 0c8c50a..cfd244e 100755
--- a/src/pmlogger/pmlogger_daily.sh
+++ b/src/pmlogger/pmlogger_daily.sh
@@ -25,11 +25,18 @@ unset PCP_STDERR
 
 # constant setup
 #
+prog=`basename $0`
 tmp=`mktemp -d /tmp/pcp.XXXXXXXXX` || exit 1
 status=0
+
+_cleanup()
+{
+    lockfile=`cat $tmp/lock 2>/dev/null`
+    rm -f "$PCP_RUN_DIR/pmlogger_daily.pid" "$lockfile"
+    rm -rf $tmp
+}
+trap "_cleanup; exit \$status" 0 1 2 3 15
 echo >$tmp/lock
-trap "rm -rf \`[ -f $tmp/lock ] && cat $tmp/lock\` $PCP_RUN_DIR/pmlogger_daily.pid $tmp; exit \$status" 0 1 2 3 15
-prog=`basename $0`
 
 if is_chkconfig_on pmlogger
 then
@@ -377,7 +384,7 @@ fi
 # $PCP_RUN_DIR creation is also done in pmcd startup, but pmcd may
 # not be running on this system
 #
-if [ -d "$PCP_RUN_DIR" ]
+if [ ! -d "$PCP_RUN_DIR" ]
 then
     mkdir -p -m 775 "$PCP_RUN_DIR"
     chown $PCP_USER:$PCP_GROUP "$PCP_RUN_DIR"
commit 3f0672d4e4611e84964a3fcf4f433d502525b7bd
Author: Nathan Scott <nathans@redhat.com>
Date:   Tue Aug 5 17:35:31 2014 +1000

    Fix pmdazswap testing for non-4K pagesize kernels

diff --git a/qa/972 b/qa/972
index 2b84b85..26251c3 100755
--- a/qa/972
+++ b/qa/972
@@ -51,6 +51,7 @@ _setup_zswap_values()
 }
 
 domain=125
+export ZSWAP_PAGESIZE=4096
 export ZSWAP_STATS_PATH="$tmp.zswap"
 
 # real QA test starts here
diff --git a/src/pmdas/zswap/pmdazswap.python b/src/pmdas/zswap/pmdazswap.python
index 3bab42d..ef06d21 100644
--- a/src/pmdas/zswap/pmdazswap.python
+++ b/src/pmdas/zswap/pmdazswap.python
@@ -21,6 +21,7 @@ from pcp.pmda import PMDA, pmdaMetric, pmdaIndom
 from resource import getpagesize
 from os import getenv, listdir
 
+ZSWAP_PAGESIZE = getpagesize()
 ZSWAP_STATS_PATH = '/sys/kernel/debug/zswap'
 
 class ZswapPMDA(PMDA):
@@ -173,8 +174,8 @@ class ZswapPMDA(PMDA):
         PMDA.__init__(self, name, domain)
         self.patherrors = 0
         self.fileerrors = 0
-        self.pagesize = getpagesize()
-        self.path = getenv('ZSWAP_STATS_PATH', ZSWAP_STATS_PATH)
+        self.pagesize = int(getenv('ZSWAP_PAGESIZE', ZSWAP_PAGESIZE))
+        self.path = str(getenv('ZSWAP_STATS_PATH', ZSWAP_STATS_PATH))
 
         self.values = {}
         self.setup_zswap_metrics(name)
commit 75028e270fc18bf58e3bdfa29cb8fb9c24bc9685
Author: Nathan Scott <nathans@redhat.com>
Date:   Wed Aug 6 15:02:15 2014 +1000

    Jump through more hoops to dodge a ppc64 valgrind non-issue

diff --git a/src/pmdas/sample/src/sample.c b/src/pmdas/sample/src/sample.c
index 2ccb9d2..ba4cd91 100644
--- a/src/pmdas/sample/src/sample.c
+++ b/src/pmdas/sample/src/sample.c
@@ -1153,7 +1153,7 @@ init_tables(int dom)
     pmidp->domain = dom;
 
     /* local hacks */
-    _string = (char *)malloc(3);
+    _string = (char *)calloc(1, 8);
     strncpy(_string, "13", sizeof("13"));
     _aggr33 = (pmValueBlock *)malloc(PM_VAL_HDR_SIZE);
     _aggr33->vlen = PM_VAL_HDR_SIZE + 0;
commit 0f5f0124eb31e5e0e267555303bfb968df6b8633
Author: Nathan Scott <nathans@redhat.com>
Date:   Wed Aug 6 15:04:00 2014 +1000

    Ensure valgrind no-problems output determinism

diff --git a/qa/common.check b/qa/common.check
index d5b02d8..d06218f 100644
--- a/qa/common.check
+++ b/qa/common.check
@@ -595,8 +595,17 @@ _check_valgrind()
     [ $? -eq 0 ] || _notrun "No valgrind binary found"
 }
 
+# Note: because we may be avoiding leaks in system libraries
+# via the suppressions, there is potential indeterminism for
+# the following case:
+# -All heap blocks were freed -- no leaks are possible
+# +LEAK SUMMARY:
+# +definitely lost: 0 bytes in 0 blocks
+# +indirectly lost: 0 bytes in 0 blocks
+# 
 _filter_valgrind()
 {
+   noleak="LEAK SUMMARY:\ndefinitely lost: 0 bytes in 0 blocks\nindirectly lost: 0 bytes in 0 blocks"
     sed \
 	-e 's/^==*[1-9][0-9]*==* *//' \
 	-e '/^$/d' \
@@ -612,7 +621,8 @@ _filter_valgrind()
 	-e '/^Reachable blocks (those to which a pointer was found)/d' \
 	-e '/^To see them, rerun with:/d' \
 	-e '/^For counts of detected and suppressed errors,/d' \
-	-e '/^ERROR SUMMARY:/s/ (suppressed: [^)]*)/ .../'
+	-e '/^ERROR SUMMARY:/s/ (suppressed: [^)]*)/ .../' \
+	-e "/^All heap blocks were freed -- .*/$noleak/"
 }
 
 _run_valgrind()
commit ecd6c9e4a327acff581d581ff302c7d842c67808
Author: Nathan Scott <nathans@redhat.com>
Date:   Wed Aug 6 15:05:06 2014 +1000

    Improve qa wait_for_pmlogger re hostnames and diagnostics

diff --git a/qa/common.check b/qa/common.check
index d06218f..dd154b2 100644
--- a/qa/common.check
+++ b/qa/common.check
@@ -273,26 +273,26 @@ _wait_for_pmcd()
 #
 _wait_for_pmlogger()
 {
-    # 20 seconds default seems like a reasonble max time to get going
+    # 20 seconds default seems like a reasonable max time to get going
     _maxdelay=20
 
     case $# in
 	0)
 	    _pid="-P"
-	    # logic copied exactly from pmlogger_check
-	    #
-	    LOCALHOSTNAME=`hostname | sed -e 's/\..*//'`
-	    [ -z "$LOCALHOSTNAME" ] && LOCALHOSTNAME=localhost
-	    _logfile="$PCP_LOG_DIR/pmlogger/$LOCALHOSTNAME/pmlogger.log" 
+	    dir_hostname=`hostname || echo localhost`
+	    _logfile="$PCP_LOG_DIR/pmlogger/$dir_hostname/pmlogger.log" 
+            _iam="primary"
 	    ;;
 	2)
 	    _pid=$1
 	    _logfile=$2
+            _iam="pid=$_pid"
 	    ;;
 	3)
 	    _pid=$1
 	    _logfile=$2
 	    _maxdelay=$3
+            _iam="pid=$_pid"
 	    ;;
 	*)
 	    echo "_wait_for_pmlogger(): wrong number of arguments"
@@ -300,15 +300,18 @@ _wait_for_pmlogger()
 	    exit $status
 	    ;;
     esac
-   
+
     #debug# set -x
     _i=0
     _dead=true
+    rm -f $tmp._wait_for_pmlogger.pmlc
     while [ $_i -lt $_maxdelay ]
     do
 	#debug# ps -ef | grep "[^0-9]$_pid[^0-9]"
-	#debug# pmlc $_pid </dev/null
-	if pmlc $_pid </dev/null 2>&1 | egrep "Connection refused|Transport endpoint is not connected" >/dev/null
+	echo "pmlc $_pid" >> $tmp._wait_for_pmlogger.pmlc
+	if pmlc $_pid </dev/null 2>&1 \
+		| tee -a $tmp._wait_for_pmlogger.pmlc \
+		| egrep "Connection refused|Transport endpoint is not connected" >/dev/null
 	then
 	    sleep 1
 	    _i=`expr $_i + 1`
@@ -323,12 +326,20 @@ _wait_for_pmlogger()
     done
     if $_dead
     then
-	echo "Arrgghhh ... pmlogger (pid=$_pid) failed to start after $_maxdelay seconds"
+	echo "Arrgghhh ... pmlogger ($_iam) failed to start after $_maxdelay seconds"
 	echo "at `date`."
 	echo "pmlogger log ($_logfile) ..."
 	cat $_logfile
 	echo
-	
+
+	#  If pmlc could not connect to pmlogger, report details
+	if [ -s $tmp._wait_for_pmlogger.host ]
+	then
+	    echo "pmlc output ..."
+	    cat $tmp._wait_for_pmlogger.host
+	    echo
+	fi
+
 	#  If pmlogger could not connect to PMCD, find which host it was
 	#  connecting to, and get the pmcd.log file from that host.
 	cat $_logfile | $PCP_AWK_PROG '/pmlogger: Cannot connect to PMCD on host/' \
commit 28e121b626b4718fb12a5d1bcc827c6c6eb567d4
Author: Nathan Scott <nathans@redhat.com>
Date:   Wed Aug 6 15:05:49 2014 +1000

    Remake tests affected by valgrind no-problem indeterminism

diff --git a/qa/719.out b/qa/719.out
index 4c8b58b..18e3ac5 100644
--- a/qa/719.out
+++ b/qa/719.out
@@ -8,7 +8,9 @@ pmUnparseHostSpec("nas1.servers.com:44321,4321@firewall.servers.com:44322") -> "
 === filtered valgrind report ===
 Memcheck, a memory error detector
 Command: src/parsehostspec nas1.servers.com:44321,4321@firewall.servers.com:44322
-All heap blocks were freed -- no leaks are possible
+LEAK SUMMARY:
+definitely lost: 0 bytes in 0 blocks
+indirectly lost: 0 bytes in 0 blocks
 ERROR SUMMARY: 0 errors from 0 contexts ...
 === std out ===
 pmParseHostSpec("nas1.servers.com:44321@firewall.servers.com:44322", ...)
@@ -19,7 +21,9 @@ pmUnparseHostSpec("nas1.servers.com:44321@firewall.servers.com:44322") -> "nas1.
 === filtered valgrind report ===
 Memcheck, a memory error detector
 Command: src/parsehostspec nas1.servers.com:44321@firewall.servers.com:44322
-All heap blocks were freed -- no leaks are possible
+LEAK SUMMARY:
+definitely lost: 0 bytes in 0 blocks
+indirectly lost: 0 bytes in 0 blocks
 ERROR SUMMARY: 0 errors from 0 contexts ...
 === std out ===
 pmParseHostSpec("nas1.servers.com:44321@firewall.servers.com", ...)
@@ -30,7 +34,9 @@ pmUnparseHostSpec("nas1.servers.com:44321@firewall.servers.com") -> "nas1.server
 === filtered valgrind report ===
 Memcheck, a memory error detector
 Command: src/parsehostspec nas1.servers.com:44321@firewall.servers.com
-All heap blocks were freed -- no leaks are possible
+LEAK SUMMARY:
+definitely lost: 0 bytes in 0 blocks
+indirectly lost: 0 bytes in 0 blocks
 ERROR SUMMARY: 0 errors from 0 contexts ...
 === std out ===
 pmParseHostSpec("nas1.servers.com@firewall.servers.com", ...)
@@ -41,7 +47,9 @@ pmUnparseHostSpec("nas1.servers.com@firewall.servers.com") -> "nas1.servers.com@
 === filtered valgrind report ===
 Memcheck, a memory error detector
 Command: src/parsehostspec nas1.servers.com@firewall.servers.com
-All heap blocks were freed -- no leaks are possible
+LEAK SUMMARY:
+definitely lost: 0 bytes in 0 blocks
+indirectly lost: 0 bytes in 0 blocks
 ERROR SUMMARY: 0 errors from 0 contexts ...
 === std out ===
 pmParseHostSpec("nas1.servers.com:44321", ...)
@@ -51,5 +59,7 @@ pmUnparseHostSpec("nas1.servers.com:44321") -> "nas1.servers.com:44321"
 === filtered valgrind report ===
 Memcheck, a memory error detector
 Command: src/parsehostspec nas1.servers.com:44321
-All heap blocks were freed -- no leaks are possible
+LEAK SUMMARY:
+definitely lost: 0 bytes in 0 blocks
+indirectly lost: 0 bytes in 0 blocks
 ERROR SUMMARY: 0 errors from 0 contexts ...
diff --git a/qa/720.out b/qa/720.out
index 6278e0e..cbb2e53 100644
--- a/qa/720.out
+++ b/qa/720.out
@@ -10,7 +10,9 @@ pmUnparseHostAttrsSpec("pcps://nas1.servers.com:44321,4321@firewall.servers.com:
 === filtered valgrind report ===
 Memcheck, a memory error detector
 Command: src/parsehostattrs pcps://nas1.servers.com:44321,4321@firewall.servers.com:44322?compress
-All heap blocks were freed -- no leaks are possible
+LEAK SUMMARY:
+definitely lost: 0 bytes in 0 blocks
+indirectly lost: 0 bytes in 0 blocks
 ERROR SUMMARY: 0 errors from 0 contexts ...
 === std out ===
 pmParseHostAttrsSpec("pcp://localhost:23?compress", ...)
@@ -22,7 +24,9 @@ pmUnparseHostAttrsSpec("pcp://localhost:23?compress") -> "pcp://localhost:23?com
 === filtered valgrind report ===
 Memcheck, a memory error detector
 Command: src/parsehostattrs pcp://localhost:23?compress
-All heap blocks were freed -- no leaks are possible
+LEAK SUMMARY:
+definitely lost: 0 bytes in 0 blocks
+indirectly lost: 0 bytes in 0 blocks
 ERROR SUMMARY: 0 errors from 0 contexts ...
 === std out ===
 pmParseHostAttrsSpec("pcp://some.host?user=pcpqa&compress&pass=blah", ...)
@@ -36,7 +40,9 @@ pmUnparseHostAttrsSpec("pcp://some.host?user=pcpqa&compress&pass=blah") -> "pcp:
 === filtered valgrind report ===
 Memcheck, a memory error detector
 Command: src/parsehostattrs pcp://some.host?user=pcpqa&compress&pass=blah
-All heap blocks were freed -- no leaks are possible
+LEAK SUMMARY:
+definitely lost: 0 bytes in 0 blocks
+indirectly lost: 0 bytes in 0 blocks
 ERROR SUMMARY: 0 errors from 0 contexts ...
 === std out ===
 pmParseHostAttrsSpec("pcp://some.host?user=pcpqa", ...)
@@ -48,7 +54,9 @@ pmUnparseHostAttrsSpec("pcp://some.host?user=pcpqa") -> "pcp://some.host?usernam
 === filtered valgrind report ===
 Memcheck, a memory error detector
 Command: src/parsehostattrs pcp://some.host?user=pcpqa
-All heap blocks were freed -- no leaks are possible
+LEAK SUMMARY:
+definitely lost: 0 bytes in 0 blocks
+indirectly lost: 0 bytes in 0 blocks
 ERROR SUMMARY: 0 errors from 0 contexts ...
 === std out ===
 pmParseHostAttrsSpec("some.host?user=pcpqa", ...)
@@ -59,7 +67,9 @@ pmUnparseHostAttrsSpec("some.host?user=pcpqa") -> "some.host?username=pcpqa"
 === filtered valgrind report ===
 Memcheck, a memory error detector
 Command: src/parsehostattrs some.host?user=pcpqa
-All heap blocks were freed -- no leaks are possible
+LEAK SUMMARY:
+definitely lost: 0 bytes in 0 blocks
+indirectly lost: 0 bytes in 0 blocks
 ERROR SUMMARY: 0 errors from 0 contexts ...
 === std out ===
 pmParseHostAttrsSpec("some.host", ...)
@@ -69,7 +79,9 @@ pmUnparseHostAttrsSpec("some.host") -> "some.host"
 === filtered valgrind report ===
 Memcheck, a memory error detector
 Command: src/parsehostattrs some.host
-All heap blocks were freed -- no leaks are possible
+LEAK SUMMARY:
+definitely lost: 0 bytes in 0 blocks
+indirectly lost: 0 bytes in 0 blocks
 ERROR SUMMARY: 0 errors from 0 contexts ...
 === std out ===
 pmParseHostAttrsSpec("pcp://?compress", ...)
@@ -80,5 +92,7 @@ pmUnparseHostAttrsSpec("pcp://?compress") -> "pcp://?compress"
 === filtered valgrind report ===
 Memcheck, a memory error detector
 Command: src/parsehostattrs pcp://?compress
-All heap blocks were freed -- no leaks are possible
+LEAK SUMMARY:
+definitely lost: 0 bytes in 0 blocks
+indirectly lost: 0 bytes in 0 blocks
 ERROR SUMMARY: 0 errors from 0 contexts ...
diff --git a/qa/875.out b/qa/875.out
index 26303e9..ae8547e 100644
--- a/qa/875.out
+++ b/qa/875.out
@@ -8,7 +8,9 @@ pmUnparseHostAttrsSpec("local:where/am/i.sock") -> "local://where/am/i.sock"
 === filtered valgrind report ===
 Memcheck, a memory error detector
 Command: src/parsehostattrs local:where/am/i.sock
-All heap blocks were freed -- no leaks are possible
+LEAK SUMMARY:
+definitely lost: 0 bytes in 0 blocks
+indirectly lost: 0 bytes in 0 blocks
 ERROR SUMMARY: 0 errors from 0 contexts ...
 === std out ===
 pmParseHostAttrsSpec("local://tmp/holey.sock?user=pcpqa&compress", ...)
@@ -19,7 +21,9 @@ pmUnparseHostAttrsSpec("local://tmp/holey.sock?user=pcpqa&compress") -> "local:/
 === filtered valgrind report ===
 Memcheck, a memory error detector
 Command: src/parsehostattrs local://tmp/holey.sock?user=pcpqa&compress
-All heap blocks were freed -- no leaks are possible
+LEAK SUMMARY:
+definitely lost: 0 bytes in 0 blocks
+indirectly lost: 0 bytes in 0 blocks
 ERROR SUMMARY: 0 errors from 0 contexts ...
 === std out ===
 pmParseHostAttrsSpec("local:?", ...)
@@ -30,7 +34,9 @@ pmUnparseHostAttrsSpec("local:?") -> "local://?"
 === filtered valgrind report ===
 Memcheck, a memory error detector
 Command: src/parsehostattrs local:?
-All heap blocks were freed -- no leaks are possible
+LEAK SUMMARY:
+definitely lost: 0 bytes in 0 blocks
+indirectly lost: 0 bytes in 0 blocks
 ERROR SUMMARY: 0 errors from 0 contexts ...
 === std out ===
 pmParseHostAttrsSpec("unix://tmp/holey.sock?compress", ...)
@@ -41,7 +47,9 @@ pmUnparseHostAttrsSpec("unix://tmp/holey.sock?compress") -> "unix://tmp/holey.so
 === filtered valgrind report ===
 Memcheck, a memory error detector
 Command: src/parsehostattrs unix://tmp/holey.sock?compress
-All heap blocks were freed -- no leaks are possible
+LEAK SUMMARY:
+definitely lost: 0 bytes in 0 blocks
+indirectly lost: 0 bytes in 0 blocks
 ERROR SUMMARY: 0 errors from 0 contexts ...
 === std out ===
 pmParseHostAttrsSpec("unix://?compress", ...)
@@ -52,5 +60,7 @@ pmUnparseHostAttrsSpec("unix://?compress") -> "unix://?compress"
 === filtered valgrind report ===
 Memcheck, a memory error detector
 Command: src/parsehostattrs unix://?compress
-All heap blocks were freed -- no leaks are possible
+LEAK SUMMARY:
+definitely lost: 0 bytes in 0 blocks
+indirectly lost: 0 bytes in 0 blocks
 ERROR SUMMARY: 0 errors from 0 contexts ...
commit 7b4117da0e27ed064c5334437c6fc97026e2a067
Author: Nathan Scott <nathans@redhat.com>
Date:   Wed Aug 6 15:07:16 2014 +1000

    Make qa/093 allow same results with fewer log reads, seen on i386

diff --git a/qa/093 b/qa/093
index 6269a73..5361798 100755
--- a/qa/093
+++ b/qa/093
@@ -30,7 +30,7 @@ _filter()
 
 # real QA test starts here
 echo "=== src/foo ==="
-src/interp2 -a src/foo | _filter 79 82 5 15
+src/interp2 -a src/foo | _filter 79 82 4 15
 
 echo
 echo "=== src/ok-bigbin ==="
diff --git a/qa/093.out b/qa/093.out
index 8ada75f..83583da 100644
--- a/qa/093.out
+++ b/qa/093.out
@@ -3,17 +3,17 @@ QA output created by 093
 start: TIMESTAMP
 end: TIMESTAMP
 step: 100 msec
-0% TIMESTAMP N forw + M back = 79-82 5-15 log reads
-10% TIMESTAMP N forw + M back = 79-82 5-15 log reads
-20% TIMESTAMP N forw + M back = 79-82 5-15 log reads
-30% TIMESTAMP N forw + M back = 79-82 5-15 log reads
-40% TIMESTAMP N forw + M back = 79-82 5-15 log reads
-50% TIMESTAMP N forw + M back = 79-82 5-15 log reads
-60% TIMESTAMP N forw + M back = 79-82 5-15 log reads
-70% TIMESTAMP N forw + M back = 79-82 5-15 log reads
-80% TIMESTAMP N forw + M back = 79-82 5-15 log reads
-90% TIMESTAMP N forw + M back = 79-82 5-15 log reads
-100% TIMESTAMP N forw + M back = 79-82 5-15 log reads
+0% TIMESTAMP N forw + M back = 79-82 4-15 log reads
+10% TIMESTAMP N forw + M back = 79-82 4-15 log reads
+20% TIMESTAMP N forw + M back = 79-82 4-15 log reads
+30% TIMESTAMP N forw + M back = 79-82 4-15 log reads
+40% TIMESTAMP N forw + M back = 79-82 4-15 log reads
+50% TIMESTAMP N forw + M back = 79-82 4-15 log reads
+60% TIMESTAMP N forw + M back = 79-82 4-15 log reads
+70% TIMESTAMP N forw + M back = 79-82 4-15 log reads
+80% TIMESTAMP N forw + M back = 79-82 4-15 log reads
+90% TIMESTAMP N forw + M back = 79-82 4-15 log reads
+100% TIMESTAMP N forw + M back = 79-82 4-15 log reads
 
 === src/ok-bigbin ===
 start: TIMESTAMP
commit e5f33203ef049e7d874f916b170eac00050a8bfe
Author: Nathan Scott <nathans@redhat.com>
Date:   Wed Aug 6 15:08:28 2014 +1000

    Force fixed-length log hostname in qa/136, for long-named test hosts

diff --git a/qa/136 b/qa/136
index 768e4c3..936bd21 100755
--- a/qa/136
+++ b/qa/136
@@ -62,6 +62,9 @@ End-of-File
 
 _wait_pmlogger_end $pid
 
+# write a fixed length hostname into log label (for dumplog determinism)
+$sudo pmloglabel -h qahost $tmp
+
 LC_TIME=POSIX ls -l $tmp.? | _do_ls
 
 echo
commit e9a788cb0258287797ff04a9dcf9e31b6e6658e8
Author: Nathan Scott <nathans@redhat.com>
Date:   Wed Aug 6 15:11:43 2014 +1000

    Rework test qa/555 so that syslog is not a .full file writer
    
    Following SELinux AVC has been observed:
    type=SYSCALL msg=audit(1406583107.479:9687): arch=c000003e syscall=59 success=yes exit=0 a0=a4e360 a1=a4dd50 a2=a4e3a0 a3=30 items=0 ppid=10832 pid=10833 auid=4294967295 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=(none) ses=4294967295 comm="rsyslogd" exe="/sbin/rsyslogd" subj=unconfined_u:system_r:syslogd_t:s0 key=(null)
    type=AVC msg=audit(1406583107.479:9687): avc:  denied  { append } for  pid=10833 comm="rsyslogd" path="/var/lib/pcp/testsuite/555.full" dev=dm-0 ino=791743 scontext=unconfined_u:system_r:syslogd_t:s0 tcontext=unconfined_u:object_r:pcp_var_lib_t:s0 tclass=file
    
    Avoid this problem (where QA redirects rsyslog service output into
    its own full file), directly) by writing .full to another tmp file
    and moving into its usual place at the end of the test.

diff --git a/qa/555 b/qa/555
index 3bb27b1..9968833 100755
--- a/qa/555
+++ b/qa/555
@@ -29,7 +29,7 @@ in
 	;;
 esac
 
-rm -f $seq.full
+$sudo rm -f $seq.full /tmp/syslog.full /tmp/syslog.out
 
 signal=$PCP_BINADM_DIR/pmsignal
 status=1	# failure is the default!
@@ -41,7 +41,7 @@ if [ -f /etc/rsyslog.conf -a -f /var/run/*syslogd.pid ]
 then
     # smells like rsyslogd
     #
-    ( echo "smells like rsyslogd"; ls -l /etc/rsyslog.conf /var/run/*syslogd.pid ) >>$seq.full
+    ( echo "smells like rsyslogd"; ls -l /etc/rsyslog.conf /var/run/*syslogd.pid ) >>/tmp/syslog.full
     daemon=rsyslogd
     config=/etc/rsyslog.d/pcpqa.conf
     update_config=false
@@ -69,14 +69,14 @@ then
 	    exit 1
 	fi
     fi
-    echo "upstart=$upstart" >>$seq.full
-    echo "systemctl=$systemctl" >>$seq.full
-    echo "init=$init" >>$seq.full
+    echo "upstart=$upstart" >>/tmp/syslog.full
+    echo "systemctl=$systemctl" >>/tmp/syslog.full
+    echo "init=$init" >>/tmp/syslog.full
 elif [ -f /etc/syslog.conf ]
 then
     # regular old syslogd
     #
-    ( echo "smells like old syslogd"; ls -l /etc/rsyslog.conf )  >>$seq.full
+    ( echo "smells like old syslogd"; ls -l /etc/rsyslog.conf )  >>/tmp/syslog.full
     daemon=syslogd
     config=/etc/syslog.conf
 else
@@ -101,7 +101,7 @@ cleanup()
 	then
 	    if $upstart
 	    then
-		$sudo service rsyslog restart >>$seq.full 2>&1
+		$sudo service rsyslog restart >>/tmp/syslog.full 2>&1
 	    elif $systemctl
 	    then
 		$sudo systemctl restart rsyslog
@@ -109,14 +109,15 @@ cleanup()
 		# kill should be enough, but restart to be sure
 		#
 		# $sudo kill -HUP `cat /var/run/rsyslogd.pid` || exit
-		$sudo $init restart >>$seq.full 2>&1
+		$sudo $init restart >>/tmp/syslog.full 2>&1
 	    fi
 	else
 	    $sudo $signal -a -s HUP $daemon || exit
 	fi
     fi
+    $sudo mv /tmp/syslog.full $seq.full
+    $sudo rm -f /tmp/syslog.out
     rm -f $tmp.*
-    $sudo rm -f /tmp/syslog
 }
 trap "cleanup; exit \$status" 0 1 2 3 15
 
@@ -128,8 +129,8 @@ setup()
     # let rsyslog create it, to ensure any security labels setup
     if [ $daemon != rsyslogd ]
     then
-	$sudo cp /dev/null /tmp/syslog || exit
-	$sudo chmod 666 /tmp/syslog || exit
+	$sudo cp /dev/null /tmp/syslog.out || exit
+	$sudo chmod 666 /tmp/syslog.out || exit
     fi
     if $update_config
     then
@@ -137,23 +138,23 @@ setup()
     else
 	$sudo touch $config.$seq
     fi
-    echo '*.*  /tmp/syslog' >$tmp.syslog.conf
+    echo '*.*  /tmp/syslog.out' >$tmp.syslog.conf
     $sudo cp $tmp.syslog.conf $config || exit
-    echo "config=$config" >>$seq.full
-    $sudo cat $config >>$seq.full
+    echo "config=$config" >>/tmp/syslog.full
+    $sudo cat $config >>/tmp/syslog.full
     if [ $daemon = rsyslogd ]
     then
 	if $upstart
 	then
-	    $sudo service rsyslog restart >>$seq.full 2>&1
+	    $sudo service rsyslog restart >>/tmp/syslog.full 2>&1
 	elif $systemctl
 	then
-	    $sudo systemctl restart rsyslog >>$seq.full 2>&1
+	    $sudo systemctl restart rsyslog >>/tmp/syslog.full 2>&1
 	else
 	    # kill should be enough, but restart to be sure
 	    #
 	    # $sudo kill -HUP `cat /var/run/rsyslogd.pid` || exit
-	    $sudo $init restart >>$seq.full 2>&1
+	    $sudo $init restart >>/tmp/syslog.full 2>&1
 	fi
     else
 	$sudo $signal -a -s HUP $daemon || exit
@@ -161,11 +162,11 @@ setup()
 }
 
 # real QA test starts here
-echo "ps before setup ..." >>$seq.full
-$PCP_PS_PROG $PCP_PS_ALL_FLAGS | egrep '([P]ID)|([s]yslog)' >>$seq.full
+echo "ps before setup ..." >>/tmp/syslog.full
+$PCP_PS_PROG $PCP_PS_ALL_FLAGS | egrep '([P]ID)|([s]yslog)' >>/tmp/syslog.full
 setup
-echo "ps after setup ..." >>$seq.full
-$PCP_PS_PROG $PCP_PS_ALL_FLAGS | egrep '([P]ID)|([s]yslog)' >>$seq.full
+echo "ps after setup ..." >>/tmp/syslog.full
+$PCP_PS_PROG $PCP_PS_ALL_FLAGS | egrep '([P]ID)|([s]yslog)' >>/tmp/syslog.full
 
 # syslog	logger -p
 # 5D		daemon.notice		<--- default
@@ -227,23 +228,23 @@ echo
 # note - agetty lines noticed on canary with SLES9 SP1 beta2
 # note - DHCPDISCOVER lines noticed on kenj-laptop with Ubuntu 8.10
 #
-echo "=== all of syslog ===" >>$seq.full
-$sudo cat /tmp/syslog >>$seq.full
-echo >>$seq.full
-echo "=== syslog for pid $! ===" >>$seq.full
+echo "=== all of syslog ===" >>/tmp/syslog.full
+$sudo cat /tmp/syslog.out >>/tmp/syslog.full
+echo >>/tmp/syslog.full
+echo "=== syslog for pid $! ===" >>/tmp/syslog.full
 # More recent syslog format seen on Ubuntu 11.04
 # (high-precision rsyslog timestamps, traditional-mode no longer enabled)
 # 2011-07-09T10:38:40+10:00 HOST pcp-pmie[PID]: 
 #
-$sudo grep '\['$!']:' /tmp/syslog \
-| tee -a $seq.full \
+$sudo grep '\['$!']:' /tmp/syslog.out \
+| tee -a /tmp/syslog.full \
 | sed \
     -e 's/^[A-Z][a-z][a-z]  *[0-9][0-9]* [0-9][0-9]:[0-9][0-9]:[0-9][0-9]/DATE/' \
     -e 's/^[0-9][0-9][0-9][0-9]-[0-9][0-9]*-[0-9][0-9]*T[0-9][0-9]:[0-9][0-9]:[0-9][0-9][^ ]* /DATE /' \
     -e "s/\\[$!]/[PID]/" \
     -e "s/`hostname | sed -e 's/\..*//'` /HOST /" \
     -e 's/[0-9][A-Z]:HOST/HOST/' \
-    -e '/ sudo: .*syslog$/d' \
+    -e '/ sudo: .*syslog.out$/d' \
     | LC_COLLATE=POSIX sort \
     | uniq
 
commit da7c8a0b4fd7d27791a96a92f99b0fd79ac7671f
Author: Nathan Scott <nathans@redhat.com>
Date:   Wed Aug 6 15:12:11 2014 +1000

    Update filters in pmie test to handle usbN interface names

diff --git a/qa/581 b/qa/581
index 95cd19d..73e4d61 100755
--- a/qa/581
+++ b/qa/581
@@ -232,6 +232,7 @@ _filter_pmie_log <$tmp.out \
     -e '/^NETWORK sl[0-9][0-9]*$/d' \
     -e '/^NETWORK stf[0-9][0-9]*$/d' \
     -e '/^NETWORK tun[0-9][0-9]*$/d' \
+    -e '/^NETWORK usb[0-9][0-9]*$/d' \
     -e '/^NETWORK vde[0-9][0-9]*$/d' \
     -e '/^NETWORK vnet[0-9][0-9]*$/d' \
     -e '/^NETWORK virbr[0-9][0-9]*$/d' \
commit 0b458092fc9c468cadfa587537ef946009b88a7b
Author: Nathan Scott <nathans@redhat.com>
Date:   Wed Aug 6 16:02:03 2014 +1000

    Slight correction to earlier valgrind determinism fix

diff --git a/qa/common.check b/qa/common.check
index dd154b2..ac21049 100644
--- a/qa/common.check
+++ b/qa/common.check
@@ -633,7 +633,7 @@ _filter_valgrind()
 	-e '/^To see them, rerun with:/d' \
 	-e '/^For counts of detected and suppressed errors,/d' \
 	-e '/^ERROR SUMMARY:/s/ (suppressed: [^)]*)/ .../' \
-	-e "/^All heap blocks were freed -- .*/$noleak/"
+	-e "s/^All heap blocks were freed -- .*/$noleak/g"
 }
 
 _run_valgrind()
commit be2cb6450297621662a1a4e656223d473a071bf9
Author: Nathan Scott <nathans@redhat.com>
Date:   Wed Aug 6 16:24:52 2014 +1000

    Add qa/views and qa/archives into testsuite rpms

diff --git a/qa/archives/GNUmakefile b/qa/archives/GNUmakefile
index 02261b8..b623bc1 100644
--- a/qa/archives/GNUmakefile
+++ b/qa/archives/GNUmakefile
@@ -10,15 +10,11 @@ OTHERS = mk.gap.sh GNUmakefile.install
 
 LSRCFILES = $(SRCARCH) $(SRCEXTRAS) $(OTHERS)
 
-default setup:
+default default_pcp setup:
 
-install:
+install install_pcp:
 	$(INSTALL) -m 755 -d $(TESTDIR)
 	$(INSTALL) -m 644 GNUmakefile.install $(TESTDIR)/GNUmakefile
 	$(INSTALL) -m 644 $(SRCARCH) $(SRCEXTRAS) $(TESTDIR)
 
 include $(BUILDRULES)
-
-default_pcp:
-
-install_pcp:
diff --git a/qa/views/GNUmakefile b/qa/views/GNUmakefile
index a8cd69e..f4a6466 100644
--- a/qa/views/GNUmakefile
+++ b/qa/views/GNUmakefile
@@ -6,15 +6,12 @@ VIEWFILES = 006-01 006-02 006-03 006-04 006-05 \
 	    AntiAliasing NoSuchHost RotateColors ScaleManual
 LSRCFILES = $(VIEWFILES) GNUmakefile.install
 
-default setup:
+default default_pcp setup:
 
-install: $(VIEWFILES)
+install install_pcp: $(VIEWFILES)
 	$(INSTALL) -m 755 -d $(TESTDIR)
 	$(INSTALL) -m 644 $(VIEWFILES) $(TESTDIR)
 	$(INSTALL) -m 644 GNUmakefile.install $(TESTDIR)/GNUmakefile
 
 include $(BUILDRULES)
 
-default_pcp:
-
-install_pcp:
commit 35599489ed0755f60212776b68663e5f3dc512ed
Author: Nathan Scott <nathans@redhat.com>
Date:   Wed Aug 6 16:34:19 2014 +1000

    Cleanup temporary diagnostics in qa/common.check

diff --git a/qa/common.check b/qa/common.check
index ac21049..6e53d07 100644
--- a/qa/common.check
+++ b/qa/common.check
@@ -333,10 +333,10 @@ _wait_for_pmlogger()
 	echo
 
 	#  If pmlc could not connect to pmlogger, report details
-	if [ -s $tmp._wait_for_pmlogger.host ]
+	if [ -s $tmp._wait_for_pmlogger.pmlc ]
 	then
 	    echo "pmlc output ..."
-	    cat $tmp._wait_for_pmlogger.host
+	    cat $tmp._wait_for_pmlogger.pmlc
 	    echo
 	fi
 
@@ -400,6 +400,7 @@ _wait_for_pmlogger()
 	status=2
 	exit $status
     fi
+    rm -f $tmp._wait_for_pmlogger.*
 }
 
 # Start a pmlogger with appropriate privs that it can create
