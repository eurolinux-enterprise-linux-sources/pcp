diff -Naurp pcp-3.10.9-orig/src/pcp/iostat/pcp-iostat.1 pcp-3.10.9/src/pcp/iostat/pcp-iostat.1
--- pcp-3.10.9-orig/src/pcp/iostat/pcp-iostat.1	2015-10-22 13:10:07.000000000 +1100
+++ pcp-3.10.9/src/pcp/iostat/pcp-iostat.1	2016-10-27 12:04:49.707389047 +1100
@@ -29,6 +29,7 @@
 [\f3\-s\f1 \f2samples\f1 \f3--samples=\f2N\f1]
 [\f3\-T\f1 \f2endtime\f1 \f3--finish=\f2TIME\f1]
 [\f3\-t\f1 \f2interval\f1 \f3--interval=\f2DELTA\f1]
+[\f3\-u\f1 \f3--no-interpolate\f1]
 [\f3\-Z\f1 \f2timezone\f1 \f3--timezone=\f2TZ\f1]
 [\f3\-z\f1 \f3--hostzone\f1]
 [\f3\-?\f1 \f3--help\f1]
@@ -77,6 +78,8 @@ are as follows:
 Performance metric values are retrieved from the Performance Co-Pilot (PCP)
 archive log file identified by the base name
 .IR archive .
+See also
+.BR \-u .
 .TP
 .B \-h
 Current performance metric values are retrieved from the nominated
@@ -110,7 +113,41 @@ In this case specifying a large
 .I interval
 (e.g. 1h for 1 hour)
 will reduce the volume of data reported and the i/o statistics will be averaged (interpolated) over
-the reporting interval.
+the reporting interval (unless the
+.B \-u
+option is specified, see below).
+.TP
+.B \-u
+When replaying an archive, by default values are reported
+according to the selected sample interval (\c
+.B \-t
+option), not according to the actual record intervals in the archive.
+To this effect PCP interpolates the values to be reported based on the
+records in the archive, and is particularly useful when the
+.B \-t
+option is used to replay an archive with a longer sampling interval than
+the underlying interval the archive was originally recorded with.
+With the
+.B \-u
+option,
+uninterpolated reporting is enabled - every value is reported
+according to the native recording interval in the archive.
+When the
+.B \-u
+option is specified, the
+.B \-t
+option makes no sense and is incompatible because the replay interval
+is always the same as the recording interval in the archive.
+In addition,
+.B \-u
+only makes sense when replaying an archive, see
+.B \-a
+above,
+and so if
+.B \-u
+is specified then
+.B \-a
+must also be specified.
 .TP
 .B \-Z
 By default,
diff -Naurp pcp-3.10.9-orig/src/pcp/iostat/pcp-iostat.py pcp-3.10.9/src/pcp/iostat/pcp-iostat.py
--- pcp-3.10.9-orig/src/pcp/iostat/pcp-iostat.py	2015-12-03 15:21:17.000000000 +1100
+++ pcp-3.10.9/src/pcp/iostat/pcp-iostat.py	2016-10-27 12:04:49.708389035 +1100
@@ -17,7 +17,7 @@
 
 import sys
 from pcp import pmapi, pmcc
-from cpmapi import PM_TYPE_U64, PM_CONTEXT_ARCHIVE, PM_SPACE_KBYTE
+from cpmapi import PM_TYPE_U64, PM_CONTEXT_ARCHIVE, PM_SPACE_KBYTE, PM_MODE_FORW
 
 IOSTAT_SD_METRICS = [ 'disk.dev.read', 'disk.dev.read_bytes',
                  'disk.dev.write', 'disk.dev.write_bytes',
@@ -166,13 +166,26 @@ class IostatReport(pmcc.MetricGroupPrint
 class IostatOptions(pmapi.pmOptions):
     # class attributes
     xflag = [] 
+    uflag = None
+
+    def checkOptions(manager):
+        if IostatOptions.uflag:
+            if manager._options.pmGetOptionInterval():
+                print("Error: -t incompatible with -u")
+                return False
+            if manager.type != PM_CONTEXT_ARCHIVE:
+                print("Error: -u can only be specified with -a archive")
+                return False
+        return True
 
     def extraOptions(self, opt, optarg, index):
         if opt == "x":
             IostatOptions.xflag += optarg.replace(',', ' ').split(' ')
+        elif opt == "u":
+            IostatOptions.uflag = True
 
     def __init__(self):
-        pmapi.pmOptions.__init__(self, "A:a:D:h:O:S:s:T:t:VZ:z?x:")
+        pmapi.pmOptions.__init__(self, "A:a:D:h:O:S:s:T:t:uVZ:z?x:")
         self.pmSetOptionCallback(self.extraOptions)
         self.pmSetLongOptionHeader("General options")
         self.pmSetLongOptionAlign()
@@ -184,6 +197,7 @@ class IostatOptions(pmapi.pmOptions):
         self.pmSetLongOptionSamples()
         self.pmSetLongOptionFinish()
         self.pmSetLongOptionInterval()
+        self.pmSetLongOption("no-interpolation", 0, "u", "", "disable interpolation mode with archives")
         self.pmSetLongOptionVersion()
         self.pmSetLongOptionTimeZone()
         self.pmSetLongOptionHostZone()
@@ -197,6 +211,13 @@ class IostatOptions(pmapi.pmOptions):
 if __name__ == '__main__':
     try:
         manager = pmcc.MetricGroupManager.builder(IostatOptions(), sys.argv)
+        if not IostatOptions.checkOptions(manager):
+            raise pmapi.pmUsageErr
+
+        if IostatOptions.uflag:
+            # -u turns off interpolation
+            manager.pmSetMode(PM_MODE_FORW, manager._options.pmGetOptionOrigin(), 0)
+
         if "dm" in IostatOptions.xflag :
             manager["iostat"] = IOSTAT_DM_METRICS
         else:
