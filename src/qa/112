#! /bin/sh
# PCP QA Test No. 112
# new PMNS exercises
#
# Copyright (c) 1995-2002 Silicon Graphics, Inc.  All Rights Reserved.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard filters
. ./common.product
. ./common.filter
. ./common.check

rm -f $seq.out
if [ $PCP_VER -lt 30600 ]
then
    ln $seq.out.1 $seq.out || exit 1
else
    ln $seq.out.2 $seq.out || exit 1
fi

status=1

trap "rm -rf $tmp.*; exit \$status" 0 1 2 3 15

_filter()
{
    _filter_pmcd_log \
    | _filter_torture_api
}

_cmp()
{
    echo "differences relative to 031.out ..."

    diff $1 031.out.${PCP_PLATFORM}
}

_failok()
{
    sed <$1 \
	-e 's/pcp\[[0-9]*]/pcp[PID]/' \
	-e "s;$tmp;TEMPFILE;g"
}


# real QA test starts here
rm -f $tmp.*

# test out compilation stat values
# use a fixed namespace
if [ $PCP_VER -lt 30600 ]
then
    pmnscomp -n src/root_pmns $tmp.bin.fixed
fi

cp $PCP_VAR_DIR/pmns/root $tmp.ascii
if [ $PCP_VER -lt 30600 ]
then
    pmnscomp -n $tmp.ascii $tmp.bin >/dev/null 2>&1
fi

echo "=== pmapi v2, ascii format pmns ==="
src/torture_api -v -n $tmp.ascii 2>&1 | _filter >$tmp.out
_cmp $tmp.out

if [ $PCP_VER -lt 30600 ]
then
    echo ""
    echo "=== pmapi v2, binary format pmns ==="
    src/torture_api -v -n $tmp.bin 2>&1 | _filter >$tmp.out
    _cmp $tmp.out
fi

status=0
exit
