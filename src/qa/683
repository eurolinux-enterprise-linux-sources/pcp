#!/bin/sh
# PCP QA Test No. 683
# Exercise MMV v3 labels support end-to-end.
#
# Copyright (c) 2018 Red Hat.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard filters
. ./common.product
. ./common.filter
. ./common.check

status=1
userid=`id -u`
groupid=`id -g`
username=`id -u -n`
hostname=`hostname`
machineid=`_machine_id`
if which domainname >/dev/null 2>&1
then
    domainname=`domainname`
else
    domainname=`hostname -d`
fi
[ -z "$domainname" ] && domainname=localdomain
[ "$domainname" = "(none)" ] && domainname=localdomain
MMV_STATS_DIR="$PCP_TMP_DIR/mmv"

# for QA the default install for mmv PMDA is as a dso, not a daemon
( echo b && echo dso ) >$tmp.input

_cleanup()
{
    cd $here
    if $need_restore
    then
	need_restore=false
	$sudo rm -f $PCP_ETC_DIR/pcp/labels/*
	_restore_config $PCP_ETC_DIR/pcp/labels
	[ -d $MMV_STATS_DIR.$seq ] && _restore_config $MMV_STATS_DIR
	# note: _restore_auto_restart pmcd done in _cleanup_pmda()
	_cleanup_pmda mmv $tmp.input
    fi
    $sudo rm -rf $tmp $tmp.*
}

_filter_pminfo()
{
    sed \
	-e "s/.domainname.:.${domainname}./\"domainname\":\"DOMAIN\"/g" \
	-e "s/.machineid.:.${machineid}./\"machineid\":\"MACHINE\"/g" \
	-e "s/.hostname.:.${hostname}./\"hostname\":\"HOSTNAME\"/g" \
	-e "s/.groupid.:$groupid/\"groupid\":GID/g" \
	-e "s/.userid.:$userid/\"userid\":UID/g" \
    #end
}

iam=mmv
_prepare_pmda mmv
trap "_cleanup; exit \$status" 0 1 2 3 15

_stop_auto_restart pmcd

need_restore=true
_save_config $PCP_ETC_DIR/pcp/labels
$sudo rm -f $PCP_ETC_DIR/pcp/labels/*

# move the MMV directory to restore contents later.
[ -d $MMV_STATS_DIR ] && _save_config $MMV_STATS_DIR

# start from a known starting point
cd "$PCP_PMDAS_DIR/$iam"
$sudo ./Remove >/dev/null 2>&1

# create a directory we can write and pcp group can read
$sudo rm -rf "$MMV_STATS_DIR"
$sudo mkdir -m 755 "$MMV_STATS_DIR"
$sudo chown $username "$MMV_STATS_DIR"
$sudo chgrp pcp "$MMV_STATS_DIR"

# real QA test starts here

echo
echo "=== $iam agent installation ==="
$sudo ./Install </dev/null >$tmp.out 2>&1
_filter_pmda_install <$tmp.out

$here/src/mmv3_labels

echo
echo "=== validate values ==="
if pminfo $iam | LC_COLLATE=POSIX sort >$tmp.names
then
    pminfo -d mmv.labels3 -l -M -f | _filter_pminfo
else
    echo "... failed! ... here is the Install log ..."
    cat $tmp.out
fi

echo
echo "=== remove $iam agent ==="
$sudo ./Remove >$tmp.out 2>&1
_filter_pmda_remove <$tmp.out

status=0
exit
