These notes should be read in conjunction with the README notes.

=== Generic Setup Steps for a PCP QA VM ===

(a) get the smallest possible boot media, install and boot
(b) check hostname, timezone and date-time are correct
(c) setup DNS: my server is bozo (192.168.1.100) and needs the VM to
    have localdomain in the domain search list
(d) change from DHCP (if setup during install) to fixed IP addresses,
    as per the DNS configured on bozo (other VMs need to be able to find
    you, and my local DHCP is not hooked into the DNS)
(e) if the install was done with a user different to the one you're going
    to run QA with, you need to set up the QA
(f) make sure the user you're going to run QA with can sudo without
    a password
(g) make sure there is no firewall, or if there is one the ports mentioned
    in qa/README (pmcd, pmlogger control, pmproxy, etc) are open
(h) git clone the PCP tree
(i) cd qa/admin and run check-vm until you're tired ...
    - beware that check-vm -p only lists the first package ... there
      may be more that one alternative, so check the output from check-vm
      (without -p) for more details
    - packages.manifest is a moving feast, so be prepared to take the
      information there as a suggestion, rather than gospel truth
    - the N/A packages are in two forms; generic for the platform
      (in packages.manifest) and per-host in check-vm ... for a new
      VM you'll only have the first and may need to make updates for
      the second

If you're NOT going to run any of the -g remote tests, then you don't need
steps (c) or (d).

The specific details for (b), (e), (f) and (g) are platform and distro
version specific I'm afraid ... good luck with that!

=== Distro Releases and Packaging Hints ===

Debian
    https://wiki.debian.org/DebianReleases
    17 Nov 2015: 6.0 (squeeze), 7.0 (wheezy) and 8.0 (jessie)
    04 May 2016: 7.0 (Wheezy), 8.0 (Jessie) and 9.0 (Stretch)

Ubuntu
    https://wiki.ubuntu.com/Releases
    04 Jun 2018: 18.04 (Bionic) 17.10 (Artful), 16.04 LTS (Xenial),
		 14.04.3 LTS (Trusty),
    # which packages are installed
    $ dpkg-query -W -f '${package}\n'
    # package search recipe (name and info or description)
    $ dpkg-query -l <pattern>
    # which package installs a file/directory (only installed packages)
    $ dpkg-query -S file-or-dir-path
    # to find package for an uninstalled file/directory
    https://packages.debian.org/search
    # which files are in an installed package
    $ dpkg -l <package>
    # package install recipe
    $ sudo apt install <package>
    # update all packages recipe
    $ sudo apt update; sudo apt dist-upgrade
    # release upgrade recipe ... update, then
    $ sudo do-release-upgrade

Fedora
    https://fedoraproject.org/wiki/Releases
    6 Jun  2015: 20, 21 & 22
    17 Nov 2015: 22 & 23
    22 Jun 2016: 23 & 24
    3 Apr 1017: 24 & 25
    23 Aug 2017: 25 & 26
    23 Sep 2018: 27 & 28
    # which packages are installed
    $ rpm -qa --qf '%{NAME}\n'
    # package search recipe (name and info or description)
    $ dnf search <pattern>
    # which package installs a file/directory
    $ rpm -qF <path>
    # which files are in an installed package
    $ rpm -ql <package>
    # update all packages recipe
    $ sudo dnf update
    # upgrade recipe from Fedora 21 onwards
    $ sudo dnf update --refresh; sudo dnf install dnf-plugin-system-upgrade
    $ sudo dnf install fedora-gpg-keys
    #                                                             for Fedora 26
    $ sudo dnf system-upgrade download --refresh --allowerasing --releasever=26
    $ sudo dnf system-upgrade reboot
    # and then watch the console window ...

RedHat
    https://access.redhat.com/articles/3078
    17 Nov 2015: 5.0-5.11, 6.0-6.7, 7.0-7.1
    23 Aug 2017: 5.0-5.11, 6.0-6.9, 7.0-7.4
    # which packages are installed
    $ rpm -qa --qf '%{NAME}\n'
    # package search recipe (name and info or description)
    $ yum search <pattern>
    # which package installs a file/directory
    $ rpm -qF <path>
    # which files are in an installed package
    $ rpm -ql <package>
    # package install recipe
    $ sudo yum install <package>
    # update all packages recipe
    $ sudo yum update
    # upgrade recipe
    $ ???
    # sort packages on installed size, smallest to largest
    $ rpm -qa --qf '%{SIZE} %{NAME}\n' | sort -k1 -n

CentOS
    https://en.wikipedia.org/wiki/CentOS#CentOS_releases
    17 Nov 2015: 5.0-5.11, 6.0-6.7, 7.0 and 7.1
    19 Apr 2017: 6.0-6.7, 7.0-7.3
    25 Sep 2018: 6.*, 7.1-7.5
    # everything the same as RedHat

OpenSuSE
    https://en.opensuse.org/Lifetime
    6 Jun 2015: 13.1 and 13.2
    17 Nov 2015: 13.1 and 13.2
    18 Apr 2017: 42.1 and 42.2
    23 Sep 2017: 42.2 and 42.3
    24 Sep 2018: 42.3 and 15
    # which packages are installed
    $ rpm -qa --qf '%{NAME}\n'
    # package search recipe (name and info or description)
    $ zypper search -s <pattern>
    # which package installs a file/directory
    $ rpm -qF <path>
    # which files are in an installed package
    $ rpm -ql <package>
    # package install recipe
    $ sudo zypper install <package>
    # update all packages recipe
    $ sudo zypper refresh; sudo zypper update
    # upgrade recipe ... only from 42.2 to 42.3
    $ sudo sed -i 's/42\.2/42.3/g' /etc/zypp/repos.d/*
    $ sudo zypper --gpg-auto-import-keys ref
    # and then in a console window
    $ sudo zypper dup

SuSE (SLES)
    https://www.suse.com/lifecycle/
    18 Nov 2105: 11 SP4 and 12 SP1
    # which packages are installed
    $ rpm -qa --qf '%{NAME}\n'
    # package search recipe (name and info or description)
    $ zypper search -s <pattern>
    # which package installs a file/directory
    $ rpm -qF <path>
    # which files are in an installed package
    $ rpm -ql <package>
    # package install recipe
    $ sudo zypper install <package>
    # update all packages recipe
    $ sudo zypper refresh; sudo zypper update
    # release upgrade recipe
    # once only ...
    $ sudo zypper install zypper-migration-plugin
    # then
    $ sudo zypper update; sudo zypper patch
    $ sudo zypper migration

FreeBSD
    https://www.freebsd.org/security/security.html#sup
    19 Nov 2015: 9.3, 10.1 and 10.2
    26 Sep 2018: 10, 10.4, 11 and 11.2
    # which packages are installed
    $ pkg info -a | sed -e 's/-[0-9].*//'
    # package search recipe (name and info or description)
    $ pkg search <pattern>
    # which package installs a file/directory
    $ pkg which file-or-dir-path
    # which files are in an installed package
    $ pkg list pkgname
    # package install recipe
    $ sudo pkg install <package>
    # update all packages recipe
    $ sudo pkg update; sudo pkg upgrade
    # release upgrade recipe
    $ sudo freebsd-update fetch; sudo freebsd-update install
    # has to be a N.M-RELEASE version for -r
    $ sudo freebsd-update upgrade -r 11.2-RELEASE; sudo freebsd-update install
    $ sudo reboot
    ...
    $ sudo freebsd-update install
    $ sudo pkg update; sudo pkg upgrade

    on vm32:
    Message from gcc6-6.4.0_7:

    To ensure binaries built with this toolchain find appropriate versions
    of the necessary run-time libraries, you may want to link using

      -Wl,-rpath=/usr/local/lib/gcc6

    For ports leveraging USE_GCC, USES=compiler, or USES=fortran this happens
    transparently.

NetBSD
    http://www.netbsd.org/releases/formal.html
    23 Nov 2015: 6.1.5 and 7.0
    14 Feb 2018: 6.1.5 and 7.1.1
    # --- pkgin for pre-build binaries ---
    # which packages are installed
    $ pkg_info -a | sed -e 's/-[0-9].*//'
    # package search recipe (name and info or description)
    $ pkgin search <pattern>
    # which package installs a file/directory
    $ pkg_info -F <path>
    # which files are in an installed package
    $ pkgin pkg-content <package>
    # available packages
    $ pkgin avail | grep <pattern> (matches name or summary)
    # installed packages
    $ pkgin list
    # package install recipe
    $ sudo pkgin install <package>
    # update all packages recipe
    $ sudo pkgin update; sudo pkgin full-upgrade
    # release upgrade recipe
    $ ???
    # --- pkgsrc for source --
    $ sudo pkgin install cvs
    # run everything as root, after cd /usr
    # to seed with the 2018Q3 stable release
    # cvs -q -z2 -d anoncvs@anoncvs.NetBSD.org:/cvsroot checkout -r pkgsrc-2018Q3 -P pkgsrc
    # to update CVS
    # cd /usr/pkgsrc && cvs update -dP

Gentoo
    https://wiki.gentoo.org/wiki/Main_Page
    No concept of versions, just install latest.
    # which packages are installed
    $ equery list '*' | sed -e 's/.*].*] //' -e 's/-[0-9].*//'
    # package search recipe - names
    $ emerge --search |-s somestring
    $ emerge --search |-s "%someregexp"
    # package search recipe - descriptions
    $ emerge --searchdesc|-S somestring
    # which package installs a file/directory
    $ equery belongs <full-pathname>
    # which files are in an installed package
    $ equery files <package>
    # package install recipe
    $ sudo emerge --ask <package> [...]
    # update all packages recipe
    No real concept of releases ... just weekly updates
    $ sudo emerge --sync
    # simple
    $ sudo emerge --update --ask @world
    # after some time may need
    $ sudo emerge --update --backtrack=100 --deep --with-bdeps=y --newuse --ask @world
    # ...
    $ sudo emerge --depclean
    # may need to rm -rf /var/tmp/portage if lots of updates
    # release upgrade recipe
    N/A

Linux Mint
    http://www.linuxmint.com/oldreleases.php
    24 Dec 2015: 13 (LTS), 17 (LTS)
    # same as Ubuntu
    
Mandriva
    https://wiki.openmandriva.org/en/Category:Releases
    4 Jun 2016: 2014.0 2014.1 2014.2
    # package search recipe (name and info or description)
    $ urpmq -Y --fuzzy --summary <string>
    # which package installs a file/directory
    $ ???
    # which files are in an installed package
    $ ???
    # package install recipe
    $ sudo urpmi <package-name>
    # update all packages recipe
    $ sudo urpmi.update -a; sudo urpmi --auto-select
    # release upgrade recipe
    $ ???

Slackware
    https://www.slackware.com
    27 June 2016: 14.1
    # which packages are installed
    $ ls /var/log/packages | sed -e 's/-[0-9].*//'
    # package search recipe (name and info or description)
    $ sudo slackpkg search <info-pattern>
    # which package installs a file/directory
    $ sudo slackpkg file-search <filename-pattern>
    # which files are in an installed package
    $ sed -e '1,/^FILE LIST:/d' </var/log/packages/<package>
    # package install recipe
    $ sudo slackpkg install <package>
    # update all packages recipe
    $ sudo slackpkg update; sudo slackpkg install-new
    # release upgrade recipe
    $ sudo slackpkg upgrade-all; sudo slackpkg clean-system

Arch Linux
    https://www.archlinux.org/releng/releases/
    04 Jan 2018: 2018.01.01 2017.12.01 2107.11.01
    27 Jun 2016: 2016.06.01, 2016.05.01, 2016.04.01
    # which packages are installed
    $ pacman -Q -i | sed -n -e '/^Name /s/.* : //p'
    # package search recipe (name and info or description)
    $ pacman -S -l | grep <package-name-pattern>
    $ pacman -S -s <regexp>
    # which package installs a file/directory
    $ pacman -Q -o <path> | <filename>
    # which files are in an installed package
    $ sudo pacman -F -y (refresh files database) then
    $         pacman -F -l <package> (files in a package)
    $         pacman -F -o <fullpath> (package(s) owning a file)
    $         pacman -F -s <regexp> (package(s) owning matching files)
    # package install recipe
    $ sudo pacman -S <package>
    # update all packages recipe
    $ sudo pacman -Sy archlinux-keyring
    $ sudo pacman -Syyu
    # release upgrade recipe
    $ ???

OpenIndiana
    https://www.openindiana.org/download/
    17 Aug 2016: 2016.04
    # initial setup to get rid of restricitions
    $ sudo pkg uninstall userland-incorporation entire
    # which packages are installed
    $ pkg list -H | sed -e 's/ .*//'
    # package search recipe (name and info or description)
    $ pkg search -pr <pattern>
    # which package installs a file/directory
    $ pkg contents -H -o pkg.name -a path=<path without leading slash>
    # which files are in an installed package
    $ pkg contents <package>
    # package install recipe
    $ sudo pkg install <package>
    # update all packages recipe
    $ sudo pkg update
    # release upgrade recipe
    $ ???
    # to show zfs snapshots
    $ zfs list -t snapshot
    # to remove zfs snapshots
    $ sudo zfs destroy [-R] <name@date>

OpenBSD
    https://en.wikipedia.org/wiki/OpenBSD_version_history
    26 Oct 2018: 6.2, 6.3, 6.4
    # package search recipe (name only, not info or description)
    $ pkg_info -Q <pattern>
    # which package installs a file/directory
    $ pkglocate <filename> or <pathname>
    # which files are in an installed package
    $ pkg_info -L <package>
    # package install recipe
    $ sudo pkg_add <package>
    # update all packages recipe
    $ sudo pkg_add -u
    # release upgrade recipe
    $ ???

Template
    URL
    DATE: VERSION(S)
    # which packages are installed
    # package search recipe (name and info or description)
    # which package installs a file/directory
    # which files are in an installed package
    # package install recipe
    # update all packages recipe
    # release upgrade recipe

=== Package Hit List of Removal Candidates ===

If you're short of space, or have long-standing VMs that you'd like to
minimize update times for, the following list of packages are ones that
are commonly installed and are not needed for PCP builds nor QA.

    qt4-doc qt5-doc libx11-doc imagemagick libreoffice* libfreerdp freerdp*
    cups foomatic-filters foomatic-db-filesystem hplip*
    sane xsane libsane libksane sane-backends*
    brasero evince totem evolution thunderbird firefox
    gimp ghostscript* busybox mono* libmono-* *games*
    espeak espeak-data aspell ispell hunspell hyphen
    atril analog coinor shotwell synaptic wamerican samba* libsamba*
    lohit-*-fonts adobe-source-han-sans-* cjkuni-uming-fonts
    wqy-zenhei-fonts julietaula-montserrat-fonts naver-nanum-fonts-common
    naver-nanum-gothic-fonts gnome-orca ndiswrapper* libhangul* libpinyin*
    libzhuyin*

=== Miscellaneous Hints ===

--- expanding root fs volume with lvm ---

Most succinct recipe is here
https://rbgeek.wordpress.com/2013/01/27/how-to-extend-the-root-partition-in-lvm/

Just remember that if you're using XFS, you need xfs_growfs instead of
resize2fs.
