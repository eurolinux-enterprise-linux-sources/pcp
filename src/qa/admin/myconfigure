#!/bin/sh
#
# Run configure like it is run for current system ... makes workarea
# src/include/pcp.conf match /etc/pcp.conf so "sudo make install"
# works without surprises
#

target=`uname -s | cut -c-5 | tr 'A-Z' 'a-z'`

# Note:	this logic needs to match the settings in Makepkgs at the
# 	top of thes source tree
#
if [ ! -x /usr/bin/rpmbuild ]
then
    configopts="--prefix=/usr --sysconfdir=/etc --localstatedir=/var"
else
    configopts=`rpmbuild --eval '--prefix=%{_prefix} --exec-prefix=%{_exec_prefix} --bindir=%{_bindir} --sbindir=%{_sbindir} --sysconfdir=%{_sysconfdir} --datadir=%{_datadir} --includedir=%{_includedir} --libdir=%{_libdir} --libexecdir=%{_libexecdir} --localstatedir=%{_localstatedir} --sharedstatedir=%{_sharedstatedir} --mandir=%{_mandir}' 2>/dev/null`
fi

case "$target"
in
    mingw)
	configopts="$configopts --disable-ssp --without-threads"
	;;
    linux)
	ARCH=`uname -m`
	[ -f /etc/slackware-version -a "$ARCH" = x86_64 ] && configopts="$configopts --libdir=/usr/lib64"
	if `which dpkg >/dev/null 2>&1`
	then
	    configopts="$configopts --libexecdir=/usr/lib"
	fi
	;;
    sunos)
	ARCH=`isainfo -k`
	[ "$ARCH" = amd64 -o "$ARCH" = sparcv9 ] && configopts="$configopts --libdir=/usr/lib/64"
	;;
esac

./configure $configopts

if [ ! -f src/include/pcp.conf ]
then
    echo "Arrgh, src/include/pcp.conf not found"
    exit 1
fi

. src/include/pcp.conf

cd src/include
$PCP_MAKE_PROG
cd ../libpcp
$PCP_MAKE_PROG
cd ../pmns
$PCP_MAKE_PROG
cd ../pmcpp
$PCP_MAKE_PROG
cd ../newhelp
$PCP_MAKE_PROG
cd ../libpcp_pmda
$PCP_MAKE_PROG
echo "== Configured pcp ($configopts)"
